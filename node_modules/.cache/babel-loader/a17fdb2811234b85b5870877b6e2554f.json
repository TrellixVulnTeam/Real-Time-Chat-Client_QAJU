{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Friend.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Preview } from '../components/Preview';\nimport { Message } from '../components/Message';\nimport { MessageBox } from '../components/MessageBox';\nimport './RoomFriend.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Friend = props => {\n  _s();\n\n  const history = useHistory();\n  const [msg, setMsg] = useState();\n  let router_data = useParams();\n  let friend_id = router_data['friend_id'];\n  let socket = new WebSocket(\"ws://localhost:8000/ws/\" + friend_id);\n\n  socket.onopen = () => {\n    console.log(\"YEEEE from the client\");\n    socket.send(\"Hey ;) ... From the client \" + friend_id);\n  };\n\n  socket.onmessage = msg => {\n    console.log(msg);\n  };\n\n  socket.onclose = event => {\n    console.log(\"socket closed connection: \", event);\n  };\n\n  if (!localStorage.getItem(\"user\")) {\n    history.push('/login');\n  }\n\n  useEffect(() => {\n    /*\n    const getMessages = async() => {\n        const response = await fetch(\"http://localhost:8000/api/get-messages\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n         const result = await response.json()\n    }\n    getMessages()\n    */\n  });\n\n  const sendMsg = () => {\n    socket.send(msg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container room-friend-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Preview, {\n        alt: \"friend\",\n        size: \"img-large\",\n        isRoom: false,\n        friend_id: friend_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MessageBox, {\n        onChange: setMsg,\n        onClick: sendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Friend, \"445iEW9CQufoOuClByWH+HBEJZU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Friend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friend\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Friend.js"],"names":["React","useEffect","useState","useHistory","useParams","Preview","Message","MessageBox","Friend","props","history","msg","setMsg","router_data","friend_id","socket","WebSocket","onopen","console","log","send","onmessage","onclose","event","localStorage","getItem","push","sendMsg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAO,mBAAP;;AAGA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,EAA9B;AACA,MAAIW,WAAW,GAAGT,SAAS,EAA3B;AACA,MAAIU,SAAS,GAAGD,WAAW,CAAC,WAAD,CAA3B;AAEA,MAAIE,MAAM,GAAG,IAAIC,SAAJ,CAAc,4BAA0BF,SAAxC,CAAb;;AAEAC,EAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAJ,IAAAA,MAAM,CAACK,IAAP,CAAY,gCAAgCN,SAA5C;AACH,GAHD;;AAKAC,EAAAA,MAAM,CAACM,SAAP,GAAoBV,GAAD,IAAS;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACH,GAFD;;AAIAI,EAAAA,MAAM,CAACO,OAAP,GAAkBC,KAAD,IAAW;AACxBL,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,KAA1C;AACH,GAFD;;AAIA,MAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAL,EAAmC;AAC/Bf,IAAAA,OAAO,CAACgB,IAAR,CAAa,QAAb;AACH;;AAGDzB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK,GAjBQ,CAAT;;AAmBA,QAAM0B,OAAO,GAAG,MAAM;AAClBZ,IAAAA,MAAM,CAACK,IAAP,CAAYT,GAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,GAAG,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,WAA3B;AAAuC,QAAA,MAAM,EAAE,KAA/C;AAAsD,QAAA,SAAS,EAAEG;AAAjE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEF,MAAtB;AAA8B,QAAA,OAAO,EAAEe;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA/DM;;GAAMnB,M;UACOL,U,EAEEC,S;;;KAHTI,M","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {Preview} from '../components/Preview'\nimport {Message} from '../components/Message'\nimport {MessageBox} from '../components/MessageBox'\nimport './RoomFriend.scss'\n\n\nexport const Friend = (props) => {\n    const history = useHistory()\n    const [msg, setMsg] = useState()\n    let router_data = useParams()\n    let friend_id = router_data['friend_id']\n\n    let socket = new WebSocket(\"ws://localhost:8000/ws/\"+friend_id)\n\n    socket.onopen = () => {\n        console.log(\"YEEEE from the client\")\n        socket.send(\"Hey ;) ... From the client \" + friend_id)\n    }\n\n    socket.onmessage = (msg) => {\n        console.log(msg)\n    }\n\n    socket.onclose = (event) => {\n        console.log(\"socket closed connection: \", event)\n    }\n\n    if (!localStorage.getItem(\"user\")) {\n        history.push('/login')\n    }\n\n\n    useEffect(() => {\n        /*\n        const getMessages = async() => {\n            const response = await fetch(\"http://localhost:8000/api/get-messages\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n        }\n        getMessages()\n        */\n\n    })\n\n    const sendMsg = () => {\n        socket.send(msg)\n    }\n\n    return (\n        <div className='container room-friend-container'>\n            <div className='row mt-5'>\n                <Preview alt='friend' size='img-large' isRoom={false} friend_id={friend_id} />\n            </div>\n\n            <div className='row'>\n            </div>\n\n            <div className='row'>\n                <MessageBox onChange={setMsg} onClick={sendMsg}/>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}