{"ast":null,"code":"import _toConsumableArray from\"/root/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/root/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/root/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/root/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import{useHistory,useParams}from'react-router-dom';import{Preview}from'../components/Preview';import{Message}from'../components/Message';import{MessageBox}from'../components/MessageBox';import'./RoomFriend.scss';//const socket = new WebSocket(\"ws://localhost:8000/ws/234\");\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Friend=function Friend(props){/*\n    const socket = new WebSocket(\"ws://localhost:8000/ws/\")\n    const socketRef = useRef();\n    socketRef.current = socket;\n    */var socket=useRef(null);var history=useHistory();var _useState=useState(),_useState2=_slicedToArray(_useState,2),msg=_useState2[0],setMsg=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),room_id=_useState6[0],setRoomId=_useState6[1];//const room_id = useRef(null);\n//const socket = useRef(null);\n//let socket = new WebSocket(\"ws://localhost:8000/ws/123\")\nprops.setRoomID(null);var router_data=useParams();var friend_id=router_data['friend_id'];if(!localStorage.getItem(\"user\")){history.push('/login');}useEffect(function(){var getFriendChat=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://\".concat(process.env.REACT_APP_SERVER_URL,\"/api/get-friend-chat\"),{// send post request to logout endpoint\nmethod:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify({friend_id:friend_id})});case 2:response=_context.sent;_context.next=5;return response.json();case 5:result=_context.sent;setRoomId(result['room_id']);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getFriendChat(){return _ref.apply(this,arguments);};}();var getMessages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://\".concat(process.env.REACT_APP_SERVER_URL,\"/api/get-messages\"),{// send post request to logout endpoint\nmethod:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify({room_id:room_id})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:result=_context2.sent;setMessages(result['messages']);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function getMessages(){return _ref2.apply(this,arguments);};}();getFriendChat();getMessages();socket.current=new WebSocket(\"ws://\".concat(process.env.REACT_APP_SERVER_URL,\"/ws/\")+room_id);socket.current.onopen=function(event){console.log(\"Connection at: \",room_id);};socket.current.onmessage=function(msg){var new_msg=JSON.parse(msg.data);console.log(new_msg);setMessages(function(prev){return[].concat(_toConsumableArray(prev),[new_msg]);});};socket.current.onclose=function(event){console.log(\"socket closed connection: \",event);};},[friend_id,room_id]);var sendMsg=function sendMsg(){socket.current.send(msg);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container room-friend-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row mt-5\",children:/*#__PURE__*/_jsx(Preview,{alt:\"friend\",size:\"img-large\",isRoom:false,friend_id:friend_id,overlay:false})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:messages.length===0?null:Object.keys(messages).map(function(key){return/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsx(Message,{user:messages[key]['user'],text:messages[key]['text'],isCurrUser:props.user['username']===messages[key]['user']})},key);})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(MessageBox,{onChange:setMsg,onClick:sendMsg})})]});};","map":{"version":3,"sources":["/root/client/src/pages/Friend.js"],"names":["React","useEffect","useState","useRef","useHistory","useParams","Preview","Message","MessageBox","Friend","props","socket","history","msg","setMsg","messages","setMessages","room_id","setRoomId","setRoomID","router_data","friend_id","localStorage","getItem","push","getFriendChat","fetch","process","env","REACT_APP_SERVER_URL","method","headers","credentials","body","JSON","stringify","response","json","result","getMessages","current","WebSocket","onopen","event","console","log","onmessage","new_msg","parse","data","prev","onclose","sendMsg","send","length","Object","keys","map","key","user"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {Preview} from '../components/Preview'\nimport {Message} from '../components/Message'\nimport {MessageBox} from '../components/MessageBox'\nimport './RoomFriend.scss'\n\n//const socket = new WebSocket(\"ws://localhost:8000/ws/234\");\n\nexport const Friend = (props) => {\n    /*\n    const socket = new WebSocket(\"ws://localhost:8000/ws/\")\n    const socketRef = useRef();\n    socketRef.current = socket;\n    */\n    const socket = useRef(null);\n\n    const history = useHistory()\n    const [msg, setMsg] = useState()\n    const [messages, setMessages] = useState([])\n    const [room_id, setRoomId] = useState('');\n    //const room_id = useRef(null);\n    //const socket = useRef(null);\n    //let socket = new WebSocket(\"ws://localhost:8000/ws/123\")\n    props.setRoomID(null)\n\n    let router_data = useParams()\n    let friend_id = router_data['friend_id']\n\n    if (!localStorage.getItem(\"user\")) {\n        history.push('/login')\n    }\n\n    useEffect(() => {\n        const getFriendChat = async() => {\n            const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-friend-chat`, { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: friend_id\n                })\n            })\n\n            const result = await response.json()\n            setRoomId(result['room_id'])\n        }\n\n        const getMessages = async() => {\n            const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-messages`, { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    room_id: room_id\n                })\n            })\n\n            const result = await response.json()\n            setMessages(result['messages'])\n        }\n\n        getFriendChat()\n        getMessages()\n\n        socket.current = new WebSocket(`ws://${process.env.REACT_APP_SERVER_URL}/ws/`+room_id)\n\n        socket.current.onopen = (event) => {\n            console.log(\"Connection at: \", room_id)\n        }\n        socket.current.onmessage = (msg) => {\n            let new_msg = JSON.parse(msg.data)\n            console.log(new_msg)\n            setMessages(prev => [...prev, new_msg])\n        }\n        socket.current.onclose = (event) => {\n            console.log(\"socket closed connection: \", event)\n        }\n    },[friend_id, room_id])\n\n    const sendMsg = () => {\n        socket.current.send(msg)\n    }\n\n    return (\n        <div className='container room-friend-container'>\n            <div className='row mt-5'>\n                <Preview alt='friend' size='img-large' isRoom={false} friend_id={friend_id} overlay={false} />\n            </div>\n\n            <div className='row'>\n                {messages.length === 0 ? null : Object.keys(messages).map(key => \n                    <div key={key} className=''>\n                        <Message user={messages[key]['user']} text={messages[key]['text']} isCurrUser={props.user['username'] === messages[key]['user']}/>\n                    </div>\n                )}\n            </div>\n\n            <div className='row'>\n                <MessageBox onChange={setMsg} onClick={sendMsg}/>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}