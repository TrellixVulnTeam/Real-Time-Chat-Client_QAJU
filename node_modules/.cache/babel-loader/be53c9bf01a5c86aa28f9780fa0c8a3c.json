{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button } from './Button';\nimport '../pages/Home.scss';\nimport './Preview.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZES = ['img-large', 'img-small'];\nexport const Preview = props => {\n  _s();\n\n  const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n\n  const [isFriend, setIsFriend] = useState(false);\n  const [profilePic, setProfilePic] = useState('');\n  const [friendName, setFriendName] = useState('');\n  const history = useHistory(); // when friend is clicked function\n\n  useEffect(() => {\n    const checkFriend = async () => {\n      const response = await fetch(\"http://localhost:8000/api/check-friend\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'true') {\n        setIsFriend(true);\n      } else {\n        setIsFriend(false);\n      }\n    };\n\n    const getFriendInfo = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-friend-info\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'Could Not Find User') {\n        console.log(result);\n      } else {\n        setFriendName(result['username']);\n        setProfilePic(result['profile_pic']);\n      }\n    };\n\n    getFriendInfo();\n    checkFriend();\n  }, [props.friend_id, friendName, profilePic]);\n\n  const addFriend = async () => {\n    const response = await fetch(\"http://localhost:8000/api/add-friend\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    history.push('/');\n  };\n\n  const removeFriend = async () => {\n    const response = await fetch(\"http://localhost:8000/api/remove-friend\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    history.push('/');\n  };\n\n  const goToMessages = () => {\n    history.push('/friend/' + props.friend_id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-container mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../default_pic.jpeg\",\n        alt: \"friend\",\n        className: `${getImgSize}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), getImgSize === 'img-large' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `overlay ${getImgSize}`,\n        children: [isFriend === false ? /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--sm\",\n          classes: \"overlay-btn\",\n          type: \"submit\",\n          onClick: addFriend,\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--sm\",\n          type: \"submit\",\n          classes: \"overlay-btn\",\n          onClick: goToMessages,\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this), isFriend === true ? /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--sm\",\n          type: \"submit\",\n          classes: \"mt-5 overlay-btn\",\n          onClick: removeFriend,\n          children: \"Remove Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-name\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: friendName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"rpfZdAi1r4UqVUavqvXMquknet8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js"],"names":["React","useState","useEffect","Redirect","useHistory","Button","SIZES","Preview","props","getImgSize","includes","size","isFriend","setIsFriend","profilePic","setProfilePic","friendName","setFriendName","history","checkFriend","response","fetch","method","headers","credentials","body","JSON","stringify","friend_id","result","json","getFriendInfo","console","log","addFriend","push","removeFriend","goToMessages"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Redirect, useHistory} from 'react-router-dom'\nimport {Button} from './Button'\nimport '../pages/Home.scss'\nimport './Preview.scss'\n\nconst SIZES = ['img-large','img-small']\n\nexport const Preview = (props) => {\n    const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n    const [isFriend, setIsFriend] = useState(false)\n    const [profilePic, setProfilePic] = useState('')\n    const [friendName, setFriendName] = useState('')\n    const history = useHistory()\n\n    // when friend is clicked function\n    useEffect(() => {\n        const checkFriend = async () => {\n            const response = await fetch(\"http://localhost:8000/api/check-friend\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'true') {\n                setIsFriend(true)\n            } else {\n                setIsFriend(false)\n            }\n        }\n        const getFriendInfo = async () => {\n            const response = await fetch(\"http://localhost:8000/api/get-friend-info\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'Could Not Find User') {\n                console.log(result)\n            } else {\n                setFriendName(result['username'])\n                setProfilePic(result['profile_pic'])\n            }\n        }\n        getFriendInfo()\n        checkFriend()\n    }, [props.friend_id, friendName, profilePic])\n\n    const addFriend = async() => {\n        const response = await fetch(\"http://localhost:8000/api/add-friend\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const result = await response.json();\n\n        console.log(result)\n        history.push('/')\n    }\n\n    const removeFriend = async() => {\n        const response = await fetch(\"http://localhost:8000/api/remove-friend\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const result = await response.json()\n        console.log(result);\n\n        history.push('/')\n    }\n\n    const goToMessages = () => {\n        history.push('/friend/' + props.friend_id)\n    }\n\n    return (\n        <div>\n            <div className='friend-container mt-2'>\n                <img src='../default_pic.jpeg' alt='friend' className={`${getImgSize}`} />\n                { getImgSize === 'img-large' ? \n                        <div className={`overlay ${getImgSize}`}>\n                            {isFriend === false ?\n                                <Button buttonStyle='btn--primary' buttonSize='btn--sm' classes='overlay-btn' type=\"submit\" onClick={addFriend}>Add Friend</Button>\n                            :\n                                <Button buttonStyle='btn--primary' buttonSize='btn--sm' type=\"submit\" classes='overlay-btn' onClick={goToMessages}>Message</Button>\n                            }\n                            {isFriend === true ?\n                                <Button buttonStyle='btn--primary' buttonSize='btn--sm' type=\"submit\" classes='mt-5 overlay-btn' onClick={removeFriend}>Remove Friend</Button>\n                                : null}\n                        </div>\n                        : null }\n            </div>\n            <div className='friend-name'>\n                <p>{friendName}</p>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}