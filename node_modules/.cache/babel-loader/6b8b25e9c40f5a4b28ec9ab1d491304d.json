{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'; //import {Button} from './Button'\n\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport { MenuItem } from '@mui/material'; //import FormControl from '@mui/material/FormControl';\n//import InputLabel from '@mui/material/InputLabel';\n\nimport '../pages/Home.scss';\nimport './Preview.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZES = ['img-large', 'img-small'];\nexport const Preview = props => {\n  _s();\n\n  const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n\n  const [isFriend, setIsFriend] = useState(false);\n  const [previewPic, setPreviewPic] = useState('');\n  const [previewName, setPreviewName] = useState('');\n  const [friends, setFriends] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const history = useHistory(); // when friend is clicked function\n\n  useEffect(() => {\n    const getFriends = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-friends\", {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const result = await response.json();\n      setFriends(result['friends']);\n      console.log(\"friends: \", result['friends']);\n    };\n\n    const checkFriend = async () => {\n      const response = await fetch(\"http://localhost:8000/api/check-friend\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'true') {\n        setIsFriend(true);\n      } else {\n        setIsFriend(false);\n      }\n    };\n\n    const getFriendInfo = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-friend-info\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'Could Not Find User') {\n        console.log(result);\n      } else {\n        setPreviewName(result['username']);\n        setPreviewPic(result['profile_pic']);\n      }\n    };\n\n    const getRoomInfo = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-room-info\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          room_id: props.room_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'Could Not Find Room') {\n        console.log(result);\n      } else {\n        setPreviewName(result['room_name']);\n        setPreviewPic(result['room_pic']);\n      }\n    };\n\n    if (props.isRoom === true) {\n      getRoomInfo();\n      getFriends();\n    } else {\n      checkFriend();\n      getFriendInfo();\n    }\n  }, [props.friend_id, props.room_id, props.isRoom]);\n\n  const addFriend = async () => {\n    const response = await fetch(\"http://localhost:8000/api/add-friend\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const result = await response.json();\n    window.location.reload();\n  };\n\n  const removeFriend = async () => {\n    const response = await fetch(\"http://localhost:8000/api/remove-friend\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    history.push('/');\n    window.location.reload();\n  };\n\n  const goToMessages = () => {\n    history.push('/friend/' + props.friend_id);\n  };\n\n  const leaveRoom = async () => {\n    const response = await fetch(\"http://localhost:8000/api/leave-room\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        room_id: props.room_id\n      })\n    });\n    window.location.reload();\n    return response;\n  };\n\n  const goToChat = async () => {\n    history.push('/room/' + props.room_id);\n  };\n\n  const sendRoomInvite = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-container mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: '../' + previewPic,\n        alt: \"friend\",\n        className: `${getImgSize}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), !props.isRoom ? // if preview for friend:\n      getImgSize === 'img-large' ?\n      /*#__PURE__*/\n      // if image is large:\n      _jsxDEV(\"div\", {\n        className: `overlay ${getImgSize}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [isFriend === false ?\n          /*#__PURE__*/\n          // if they are not friends:\n          _jsxDEV(\"div\", {\n            classname: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 auto',\n                display: \"flex\"\n              },\n              className: \"overlay-btn mt-4\",\n              variant: \"contained\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: addFriend,\n              children: \"Add Friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this) :\n          /*#__PURE__*/\n          // if they are friends:\n          _jsxDEV(\"div\", {\n            classname: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 auto',\n                display: \"flex\"\n              },\n              className: \"overlay-btn mt-4\",\n              variant: \"contained\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: goToMessages,\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), isFriend === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            classname: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 auto',\n                display: \"flex\"\n              },\n              className: \"overlay-btn mt-4\",\n              variant: \"contained\",\n              color: \"error\",\n              size: \"small\",\n              onClick: removeFriend,\n              children: \"Remove Friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }, this) : null // if small-image\n      :\n      /*#__PURE__*/\n      // if preview for Room: }\n      _jsxDEV(\"div\", {\n        className: `overlay ${getImgSize}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            classname: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 auto',\n                display: \"flex\"\n              },\n              className: \"overlay-btn mt-3\",\n              variant: \"contained\",\n              color: \"secondary\",\n              size: \"small\",\n              onClick: goToChat,\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            classname: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 auto',\n                display: \"flex\"\n              },\n              variant: \"contained\",\n              color: \"secondary\",\n              className: \"overlay-btn mt-2\",\n              id: \"basic-button\",\n              \"aria-controls\": \"basic-menu\",\n              \"aria-haspopup\": \"true\",\n              \"aria-expanded\": open ? 'true' : undefined,\n              onClick: handleClick,\n              children: \"Invite Friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"basic-menu\",\n              anchorEl: anchorEl,\n              open: open,\n              onClose: handleClose,\n              MenuListProps: {\n                'aria-labelledby': 'basic-button'\n              },\n              children: Object.keys(friends).map(key => /*#__PURE__*/_jsxDEV(MenuItem, {\n                sx: {\n                  backgroundColor: '#242424',\n                  '&:hover': {\n                    backgroundColor: '#2d2d2d'\n                  }\n                },\n                onClick: sendRoomInvite,\n                value: friends[key],\n                children: /*#__PURE__*/_jsxDEV(Preview, {\n                  alt: \"friend\",\n                  size: \"img-small\",\n                  isRoom: false,\n                  friend_id: friends[key]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            classname: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                margin: '0 auto',\n                display: \"flex\"\n              },\n              variant: \"contained\",\n              color: \"error\",\n              className: \"overlay-btn mt-2\",\n              onClick: leaveRoom,\n              children: \"Leave Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-name\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: previewName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"VUFQC8lSW2cqiZO0nU5e/gb+RQ8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js"],"names":["React","useState","useEffect","useHistory","Button","Menu","MenuItem","SIZES","Preview","props","getImgSize","includes","size","isFriend","setIsFriend","previewPic","setPreviewPic","previewName","setPreviewName","friends","setFriends","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","history","getFriends","response","fetch","headers","credentials","result","json","console","log","checkFriend","method","body","JSON","stringify","friend_id","getFriendInfo","getRoomInfo","room_id","isRoom","addFriend","window","location","reload","removeFriend","push","goToMessages","leaveRoom","goToChat","sendRoomInvite","margin","display","undefined","Object","keys","map","key","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,kBAAzB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,eAAzB,C,CAEA;AACA;;AAEA,OAAO,oBAAP;AACA,OAAO,gBAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAa,WAAb,CAAd;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,UAAU,GAAGH,KAAK,CAACI,QAAN,CAAeF,KAAK,CAACG,IAArB,IAA6BH,KAAK,CAACG,IAAnC,GAA0CL,KAAK,CAAC,CAAD,CAAlE,CAD8B,CACyC;;AACvE,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BtB,KAAK,CAACC,QAAN,CAAe,IAAf,CAAhC;AACA,QAAMsB,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;;AACA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,WAAW,CAACI,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACtBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMO,OAAO,GAAG1B,UAAU,EAA1B,CAhB8B,CAkB9B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4B,UAAU,GAAG,YAAW;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAClEC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SADyD;AAElEC,QAAAA,WAAW,EAAE;AAFqD,OAA1C,CAA5B;AAKA,YAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;AACAhB,MAAAA,UAAU,CAACe,MAAM,CAAC,SAAD,CAAP,CAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,MAAM,CAAC,SAAD,CAA9B;AACH,KATD;;AAWA,UAAMI,WAAW,GAAG,YAAY;AAC5B,YAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AAAE;AACrEQ,QAAAA,MAAM,EAAE,MAD2D;AAEnEP,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF0D;AAGnEC,QAAAA,WAAW,EAAE,SAHsD;AAInEO,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,SAAS,EAAEnC,KAAK,CAACmC;AADA,SAAf;AAJ6D,OAA3C,CAA5B;AASA,YAAMT,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;;AAEA,UAAID,MAAM,CAAC,SAAD,CAAN,KAAsB,MAA1B,EAAkC;AAC9BrB,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAFD,MAEO;AACHA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,KAjBD;;AAkBA,UAAM+B,aAAa,GAAG,YAAY;AAC9B,YAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA8C;AAAE;AACxEQ,QAAAA,MAAM,EAAE,MAD8D;AAEtEP,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF6D;AAGtEC,QAAAA,WAAW,EAAE,SAHyD;AAItEO,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,SAAS,EAAEnC,KAAK,CAACmC;AADA,SAAf;AAJgE,OAA9C,CAA5B;AASA,YAAMT,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;;AAEA,UAAID,MAAM,CAAC,SAAD,CAAN,KAAsB,qBAA1B,EAAiD;AAC7CE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,OAFD,MAEO;AACHjB,QAAAA,cAAc,CAACiB,MAAM,CAAC,UAAD,CAAP,CAAd;AACAnB,QAAAA,aAAa,CAACmB,MAAM,CAAC,aAAD,CAAP,CAAb;AACH;AACJ,KAlBD;;AAmBA,UAAMW,WAAW,GAAG,YAAY;AAC5B,YAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AAAE;AACtEQ,QAAAA,MAAM,EAAE,MAD4D;AAEpEP,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF2D;AAGpEC,QAAAA,WAAW,EAAE,SAHuD;AAIpEO,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBI,UAAAA,OAAO,EAAEtC,KAAK,CAACsC;AADE,SAAf;AAJ8D,OAA5C,CAA5B;AASA,YAAMZ,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;;AAEA,UAAID,MAAM,CAAC,SAAD,CAAN,KAAsB,qBAA1B,EAAiD;AAC7CE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,OAFD,MAEO;AACHjB,QAAAA,cAAc,CAACiB,MAAM,CAAC,WAAD,CAAP,CAAd;AACAnB,QAAAA,aAAa,CAACmB,MAAM,CAAC,UAAD,CAAP,CAAb;AACH;AACJ,KAlBD;;AAoBA,QAAI1B,KAAK,CAACuC,MAAN,KAAiB,IAArB,EAA2B;AACvBF,MAAAA,WAAW;AACXhB,MAAAA,UAAU;AACb,KAHD,MAGO;AACHS,MAAAA,WAAW;AACXM,MAAAA,aAAa;AAChB;AACJ,GA5EQ,EA4EN,CAACpC,KAAK,CAACmC,SAAP,EAAkBnC,KAAK,CAACsC,OAAxB,EAAiCtC,KAAK,CAACuC,MAAvC,CA5EM,CAAT;;AA8EA,QAAMC,SAAS,GAAG,YAAW;AACzB,UAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AAAE;AACnEQ,MAAAA,MAAM,EAAE,MADyD;AAEjEP,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFwD;AAGjEC,MAAAA,WAAW,EAAE,SAHoD;AAIjEO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,SAAS,EAAEnC,KAAK,CAACmC;AADA,OAAf;AAJ2D,KAAzC,CAA5B;AASA,UAAMT,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;AAEAc,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAbD;;AAeA,QAAMC,YAAY,GAAG,YAAW;AAC5B,UAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AAAE;AACtEQ,MAAAA,MAAM,EAAE,MAD4D;AAEpEP,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF2D;AAGpEC,MAAAA,WAAW,EAAE,SAHuD;AAIpEO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,SAAS,EAAEnC,KAAK,CAACmC;AADA,OAAf;AAJ8D,KAA5C,CAA5B;AASA,UAAMT,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAN,IAAAA,OAAO,CAACyB,IAAR,CAAa,GAAb;AACAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAfD;;AAkBA,QAAMG,YAAY,GAAG,MAAM;AACvB1B,IAAAA,OAAO,CAACyB,IAAR,CAAa,aAAa7C,KAAK,CAACmC,SAAhC;AACH,GAFD;;AAIA,QAAMY,SAAS,GAAG,YAAW;AACzB,UAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AAAE;AACnEQ,MAAAA,MAAM,EAAE,MADyD;AAEjEP,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFwD;AAGjEC,MAAAA,WAAW,EAAE,SAHoD;AAIjEO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBI,QAAAA,OAAO,EAAEtC,KAAK,CAACsC;AADE,OAAf;AAJ2D,KAAzC,CAA5B;AAQAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,WAAOrB,QAAP;AACH,GAXD;;AAaA,QAAM0B,QAAQ,GAAG,YAAW;AACxB5B,IAAAA,OAAO,CAACyB,IAAR,CAAa,WAAW7C,KAAK,CAACsC,OAA9B;AACH,GAFD;;AAIA,QAAMW,cAAc,GAAIhC,KAAD,IAAW,CAEjC,CAFD;;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAE,QAAMX,UAAhB;AAA4B,QAAA,GAAG,EAAC,QAAhC;AAAyC,QAAA,SAAS,EAAG,GAAEL,UAAW;AAAlE;AAAA;AAAA;AAAA;AAAA,cADJ,EAEM,CAACD,KAAK,CAACuC,MAAP,GAAgB;AACVtC,MAAAA,UAAU,KAAK,WAAf;AAAA;AAA6B;AAC7B;AAAK,QAAA,SAAS,EAAG,WAAUA,UAAW,EAAtC;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,qBACKG,QAAQ,KAAK,KAAb;AAAA;AAAqB;AAClB;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE;AAAC8C,gBAAAA,MAAM,EAAE,QAAT;AAAmBC,gBAAAA,OAAO,EAAE;AAA5B,eAAf;AAAoD,cAAA,SAAS,EAAC,kBAA9D;AAAiF,cAAA,OAAO,EAAC,WAAzF;AAAqG,cAAA,KAAK,EAAC,WAA3G;AAAuH,cAAA,IAAI,EAAC,OAA5H;AAAoI,cAAA,OAAO,EAAEX,SAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADH;AAAA;AAIO;AACJ;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE;AAACU,gBAAAA,MAAM,EAAE,QAAT;AAAmBC,gBAAAA,OAAO,EAAE;AAA5B,eAAf;AAAoD,cAAA,SAAS,EAAC,kBAA9D;AAAiF,cAAA,OAAO,EAAC,WAAzF;AAAqG,cAAA,KAAK,EAAC,WAA3G;AAAuH,cAAA,IAAI,EAAC,OAA5H;AAAoI,cAAA,OAAO,EAAEL,YAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANR,EAUK1C,QAAQ,KAAK,IAAb,gBACG;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE;AAAC8C,gBAAAA,MAAM,EAAE,QAAT;AAAmBC,gBAAAA,OAAO,EAAE;AAA5B,eAAf;AAAoD,cAAA,SAAS,EAAC,kBAA9D;AAAiF,cAAA,OAAO,EAAC,WAAzF;AAAqG,cAAA,KAAK,EAAC,OAA3G;AAAmH,cAAA,IAAI,EAAC,OAAxH;AAAgI,cAAA,OAAO,EAAEP,YAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADH,GAIK,IAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,GAmBE,IApBR,CAoBa;AApBb;AAAA;AAqBJ;AACE;AAAK,QAAA,SAAS,EAAG,WAAU3C,UAAW,EAAtC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE;AAACiD,gBAAAA,MAAM,EAAE,QAAT;AAAmBC,gBAAAA,OAAO,EAAE;AAA5B,eAAf;AAAoD,cAAA,SAAS,EAAC,kBAA9D;AAAiF,cAAA,OAAO,EAAC,WAAzF;AAAqG,cAAA,KAAK,EAAC,WAA3G;AAAuH,cAAA,IAAI,EAAC,OAA5H;AAAoI,cAAA,OAAO,EAAEH,QAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI,QAAC,MAAD;AACI,cAAA,KAAK,EAAE;AAACE,gBAAAA,MAAM,EAAE,QAAT;AAAmBC,gBAAAA,OAAO,EAAE;AAA5B,eADX;AAEI,cAAA,OAAO,EAAC,WAFZ;AAGI,cAAA,KAAK,EAAC,WAHV;AAII,cAAA,SAAS,EAAC,kBAJd;AAKI,cAAA,EAAE,EAAC,cALP;AAMI,+BAAc,YANlB;AAOI,+BAAc,MAPlB;AAQI,+BAAerC,IAAI,GAAG,MAAH,GAAYsC,SARnC;AASI,cAAA,OAAO,EAAEpC,WATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAcI,QAAC,IAAD;AACI,cAAA,EAAE,EAAC,YADP;AAEI,cAAA,QAAQ,EAAEJ,QAFd;AAGI,cAAA,IAAI,EAAEE,IAHV;AAII,cAAA,OAAO,EAAEK,WAJb;AAKI,cAAA,aAAa,EAAE;AAAC,mCAAmB;AAApB,eALnB;AAAA,wBAQKkC,MAAM,CAACC,IAAP,CAAY5C,OAAZ,EAAqB6C,GAArB,CAAyBC,GAAG,iBAC7B,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE;AAACC,kBAAAA,eAAe,EAAE,SAAlB;AAA6B,6BAAW;AAACA,oBAAAA,eAAe,EAAE;AAAlB;AAAxC,iBAAd;AAAqF,gBAAA,OAAO,EAAER,cAA9F;AAA8G,gBAAA,KAAK,EAAEvC,OAAO,CAAC8C,GAAD,CAA5H;AAAA,uCACQ,QAAC,OAAD;AAAS,kBAAA,GAAG,EAAC,QAAb;AAAsB,kBAAA,IAAI,EAAC,WAA3B;AAAuC,kBAAA,MAAM,EAAE,KAA/C;AAAsD,kBAAA,SAAS,EAAE9C,OAAO,CAAC8C,GAAD;AAAxE;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,sBADC;AARL;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAkCI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE;AAACN,gBAAAA,MAAM,EAAE,QAAT;AAAmBC,gBAAAA,OAAO,EAAE;AAA5B,eAAf;AAAoD,cAAA,OAAO,EAAC,WAA5D;AAAwE,cAAA,KAAK,EAAC,OAA9E;AAAsF,cAAA,SAAS,EAAC,kBAAhG;AAAmH,cAAA,OAAO,EAAEJ,SAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAoEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA,kBAAIvC;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0EH,CAtOM;;GAAMT,O;UAgBOL,U;;;KAhBPK,O","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\n//import {Button} from './Button'\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport { MenuItem } from '@mui/material';\n\n//import FormControl from '@mui/material/FormControl';\n//import InputLabel from '@mui/material/InputLabel';\n\nimport '../pages/Home.scss'\nimport './Preview.scss'\n\nconst SIZES = ['img-large','img-small']\n\nexport const Preview = (props) => {\n    const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n    const [isFriend, setIsFriend] = useState(false)\n    const [previewPic, setPreviewPic] = useState('')\n    const [previewName, setPreviewName] = useState('')\n    const [friends, setFriends] = useState(false)\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const history = useHistory()\n\n    // when friend is clicked function\n    useEffect(() => {\n        const getFriends = async() => {\n            const response = await fetch(\"http://localhost:8000/api/get-friends\", {\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            })\n\n            const result = await response.json()\n            setFriends(result['friends']) \n            console.log(\"friends: \",result['friends'])\n        }\n\n        const checkFriend = async () => {\n            const response = await fetch(\"http://localhost:8000/api/check-friend\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'true') {\n                setIsFriend(true)\n            } else {\n                setIsFriend(false)\n            }\n        }\n        const getFriendInfo = async () => {\n            const response = await fetch(\"http://localhost:8000/api/get-friend-info\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'Could Not Find User') {\n                console.log(result)\n            } else {\n                setPreviewName(result['username'])\n                setPreviewPic(result['profile_pic'])\n            }\n        }\n        const getRoomInfo = async () => {\n            const response = await fetch(\"http://localhost:8000/api/get-room-info\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    room_id: props.room_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'Could Not Find Room') {\n                console.log(result)\n            } else {\n                setPreviewName(result['room_name'])\n                setPreviewPic(result['room_pic'])\n            }\n        }\n\n        if (props.isRoom === true) {\n            getRoomInfo()\n            getFriends()\n        } else {\n            checkFriend()\n            getFriendInfo()\n        }\n    }, [props.friend_id, props.room_id, props.isRoom])\n\n    const addFriend = async() => {\n        const response = await fetch(\"http://localhost:8000/api/add-friend\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const result = await response.json();\n\n        window.location.reload()\n    }\n\n    const removeFriend = async() => {\n        const response = await fetch(\"http://localhost:8000/api/remove-friend\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const result = await response.json()\n        console.log(result);\n\n        history.push('/')\n        window.location.reload();\n    }\n\n\n    const goToMessages = () => {\n        history.push('/friend/' + props.friend_id)\n    }\n\n    const leaveRoom = async() => {\n        const response = await fetch(\"http://localhost:8000/api/leave-room\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                room_id: props.room_id\n            })\n        })\n        window.location.reload();\n        return response\n    }\n\n    const goToChat = async() => {\n        history.push('/room/' + props.room_id)\n    }\n\n    const sendRoomInvite = (event) => {\n\n    }\n\n\n    return (\n        <div>\n            <div className='friend-container mt-2'>\n                <img src={'../'+previewPic} alt='friend' className={`${getImgSize}`} />\n                { !props.isRoom ? // if preview for friend:\n                        getImgSize === 'img-large' ? // if image is large:\n                        <div className={`overlay ${getImgSize}`}>  \n                        <div className='col'>\n                            {isFriend === false ? // if they are not friends:\n                                <div classname='row'>\n                                    <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-4' variant='contained' color='secondary' size='small' onClick={addFriend}>Add Friend</Button>\n                                </div>\n                                :   // if they are friends:\n                                <div classname='row'>\n                                    <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-4' variant='contained' color='secondary' size='small' onClick={goToMessages}>Message</Button>\n                                </div>\n                            }\n                            {isFriend === true ?\n                                <div classname='row'>\n                                    <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-4' variant='contained' color='error' size='small' onClick={removeFriend}>Remove Friend</Button>\n                                </div>\n                                : null}\n                        </div>\n                        </div>\n                        : null // if small-image\n            : // if preview for Room: }\n                <div className={`overlay ${getImgSize}`}>  \n                    <div className='col'>\n                        <div classname='row'>\n                            <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-3' variant='contained' color='secondary' size='small' onClick={goToChat}>Chat</Button>\n                        </div>\n                        <div classname='row'>\n                            <Button\n                                style={{margin: '0 auto', display: \"flex\"}}\n                                variant='contained'\n                                color='secondary'\n                                className='overlay-btn mt-2'\n                                id=\"basic-button\"\n                                aria-controls=\"basic-menu\"\n                                aria-haspopup=\"true\"\n                                aria-expanded={open ? 'true' : undefined}\n                                onClick={handleClick}\n                            >\n                            Invite Friend\n                            </Button>\n                            <Menu\n                                id=\"basic-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={handleClose}\n                                MenuListProps={{'aria-labelledby': 'basic-button',}}\n                                \n                            >\n                                {Object.keys(friends).map(key => \n                                <MenuItem sx={{backgroundColor: '#242424', '&:hover': {backgroundColor: '#2d2d2d'}}} onClick={sendRoomInvite} value={friends[key]}>\n                                        <Preview alt='friend' size='img-small' isRoom={false} friend_id={friends[key]} />\n                                    </MenuItem>\n                                )}\n\n                            </Menu>\n                        </div>\n                        <div classname='row'>\n                            <Button style={{margin: '0 auto', display: \"flex\"}} variant='contained' color='error' className='overlay-btn mt-2' onClick={leaveRoom}>Leave Room</Button>\n                        </div>\n                    </div>\n                </div>}\n\n        </div>\n\n            <div className='friend-name'>\n                <p>{previewName}</p>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}