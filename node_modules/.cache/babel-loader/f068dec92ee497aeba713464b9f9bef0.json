{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Navbar } from './components/Navbar';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\nimport { Register } from './pages/Register';\nimport { Friend } from './pages/Friend';\nimport { Room } from './pages/Room';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(''); // Get user if logged in\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await fetch(\"http://localhost:8000/api/getuser\", {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const user = await response.json();\n\n      if (user.message !== undefined) {\n        // if error message from server:\n        setUser(''); // set user to empty (couldn't get user)\n      } else {\n        // else:\n        localStorage.setItem(\"user\", user);\n        setUser(user); // set user to retrieved user's user\n      }\n    };\n\n    fetchUser().catch(setUser('')); // get user, set to empty if cannot get user\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        user: user,\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: () => /*#__PURE__*/_jsxDEV(Home, {\n          user: user,\n          setUser: setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          user: user,\n          setUser: setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: () => /*#__PURE__*/_jsxDEV(Register, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/friend/:friend_id\",\n        exact: true,\n        component: () => /*#__PURE__*/_jsxDEV(Friend, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/room/:room_id\",\n        exact: true,\n        component: () => /*#__PURE__*/_jsxDEV(Room, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"7ubZgTuJ1mJ9pAGlCb8lUkIZULE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/App.js"],"names":["React","useState","useEffect","Navbar","BrowserRouter","Route","Home","Login","Register","Friend","Room","App","user","setUser","fetchUser","response","fetch","headers","credentials","json","message","undefined","localStorage","setItem","catch"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,IAAR,QAAmB,cAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CADW,CAGX;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,SAAS,GAAG,YAAW;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC9DC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SADqD;AAE9DC,QAAAA,WAAW,EAAE;AAFiD,OAAtC,CAA5B;AAKA,YAAMN,IAAI,GAAG,MAAMG,QAAQ,CAACI,IAAT,EAAnB;;AAEA,UAAIP,IAAI,CAACQ,OAAL,KAAiBC,SAArB,EAAgC;AAAE;AAC9BR,QAAAA,OAAO,CAAC,EAAD,CAAP,CAD4B,CACE;AACjC,OAFD,MAEO;AAA2B;AAC9BS,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BX,IAA7B;AACAC,QAAAA,OAAO,CAACD,IAAD,CAAP,CAFG,CAEc;AACpB;AACJ,KAdD;;AAgBAE,IAAAA,SAAS,GAAGU,KAAZ,CAAkBX,OAAO,CAAC,EAAD,CAAzB,EAjBY,CAiBmB;AAClC,GAlBQ,EAkBP,EAlBO,CAAT;AAoBF,sBACE;AAAA,2BACI,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAED,IAAd;AAAoB,QAAA,OAAO,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAwB,QAAA,SAAS,EAAE,mBAAM,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED,IAAZ;AAAkB,UAAA,OAAO,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAwB,QAAA,SAAS,EAAE,mBAAM,QAAC,KAAD;AAAO,UAAA,IAAI,EAAED,IAAb;AAAmB,UAAA,OAAO,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAE,mBAAM,QAAC,QAAD;AAAU,UAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,oBAAZ;AAAiC,QAAA,KAAK,MAAtC;AAAyC,QAAA,SAAS,EAAE,mBAAM,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,gBAAZ;AAA6B,QAAA,KAAK,MAAlC;AAAuC,QAAA,SAAS,EAAE,mBAAM,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAaD;;GArCQD,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport { Navbar } from './components/Navbar';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {Home} from './pages/Home';\nimport {Login} from './pages/Login';\nimport {Register} from './pages/Register';\nimport {Friend} from './pages/Friend'\nimport {Room} from './pages/Room'\n\nfunction App() {\n    const [user, setUser] = useState('')\n\n    // Get user if logged in\n    useEffect(() => {\n        const fetchUser = async() => {\n            const response = await fetch(\"http://localhost:8000/api/getuser\", {\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            })\n\n            const user = await response.json()\n            \n            if (user.message !== undefined) { // if error message from server:\n                setUser('')                   // set user to empty (couldn't get user)\n            } else {                          // else:\n                localStorage.setItem(\"user\", user)\n                setUser(user)    // set user to retrieved user's user\n            }\n        }\n        \n        fetchUser().catch(setUser('')) // get user, set to empty if cannot get user\n    },[])\n\n  return (\n    <>\n        <BrowserRouter>\n            <Navbar user={user} setUser={setUser} />\n            <Route path='/' exact   component={() => <Home user={user} setUser={setUser} />}/>\n            <Route path='/login'    component={() => <Login user={user} setUser={setUser} />}/>\n            <Route path='/register' component={() => <Register user={user}/>} />\n            <Route path='/friend/:friend_id' exact   component={() => <Friend user={user}/>} />\n            <Route path='/room/:room_id' exact     component={() => <Room user={user}/>} />\n        </BrowserRouter>\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}