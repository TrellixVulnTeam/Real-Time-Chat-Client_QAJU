{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button } from './Button'; //import {Link} from 'react-router-dom'\n\nimport TextField from '@material-ui/core/TextField';\nimport './Search.scss';\nimport './Message.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = props => {\n  _s();\n\n  const [error, setError] = useState('');\n  const [username, setUsername] = useState('');\n  let search_results = [];\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:8000/api/search-friend\", {\n      // send post request to login endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        username: username\n      })\n    });\n    const result = await response.json(); // get content\n\n    if (result.message !== undefined) {\n      setError(result.message);\n    } else {\n      setError('');\n      search_results = result;\n      console.log(search_results);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.search ? 'search-window active' : 'search-window',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search...\",\n          multiline: true,\n          maxRows: 4,\n          variant: \"filled\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonSize: \"btn--md\",\n          buttonStyle: \"btn--secondary\",\n          type: \"submit\",\n          my: \"mt-2\",\n          mx: \"mx-auto\",\n          onClick: submit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), search_results.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"found-user\",\n      children: user[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"u0aGKw23xgJMXh2r1PJ/awumlDs=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Search.js"],"names":["React","SyntheticEvent","useState","Button","TextField","Search","props","error","setError","username","setUsername","search_results","submit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","result","json","message","undefined","console","log","search","target","value","map","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,cAAf,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,MAAR,QAAqB,UAArB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,eAAP;AACA,OAAO,gBAAP;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIS,cAAc,GAAG,EAArB;;AAEA,QAAMC,MAAM,GAAG,MAAMC,CAAN,IAA4B;AACvCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AAAE;AACtEC,MAAAA,MAAM,EAAE,MAD4D;AAEpEC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF2D;AAGpEC,MAAAA,WAAW,EAAE,SAHuD;AAIpEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,QAAAA,QAAQ,EAAEA;AADO,OAAf;AAJ8D,KAA5C,CAA5B;AASA,UAAMc,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAArB,CAZuC,CAYF;;AAErC,QAAID,MAAM,CAACE,OAAP,KAAmBC,SAAvB,EAAkC;AAC9BlB,MAAAA,QAAQ,CAACe,MAAM,CAACE,OAAR,CAAR;AACH,KAFD,MAEO;AACHjB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAG,MAAAA,cAAc,GAAGY,MAAjB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYjB,cAAZ;AACH;AAEJ,GAtBD;;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAEL,KAAK,CAACuB,MAAN,GAAe,sBAAf,GAAwC,eAAxD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,WADV;AAEI,UAAA,SAAS,MAFb;AAGI,UAAA,OAAO,EAAE,CAHb;AAII,UAAA,OAAO,EAAC,QAJZ;AAKI,UAAA,QAAQ,EAAEhB,CAAC,IAAEH,WAAW,CAACG,CAAC,CAACiB,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAC,SAAnB;AAA6B,UAAA,WAAW,EAAC,gBAAzC;AAA0D,UAAA,IAAI,EAAC,QAA/D;AAAwE,UAAA,EAAE,EAAC,MAA3E;AAAkF,UAAA,EAAE,EAAC,SAArF;AAA+F,UAAA,OAAO,EAAEnB,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,EASKL,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,EAcKI,cAAc,CAACqB,GAAf,CAAmBC,IAAI,iBACpB;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BA,IAAI,CAAC,CAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,YADH,CAdL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAjDM;;GAAM5B,M;;KAAAA,M","sourcesContent":["import React, {SyntheticEvent, useState} from 'react'\nimport {Button} from './Button'\n//import {Link} from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport './Search.scss'\nimport './Message.scss'\n\nexport const Search = (props) => {\n    const [error, setError] = useState('')\n    const [username, setUsername] = useState('')\n    let search_results = []\n\n    const submit = async(e: SyntheticEvent) => {\n        e.preventDefault()\n\n        const response = await fetch(\"http://localhost:8000/api/search-friend\", { // send post request to login endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                username: username\n            })\n        })\n\n        const result = await response.json() // get content\n\n        if (result.message !== undefined) {\n            setError(result.message)\n        } else {\n            setError('')\n            search_results = result\n            console.log(search_results)\n        }\n\n    }\n\n    return (\n        <div className={props.search ? 'search-window active' : 'search-window'} >\n            <div className='search-box'>\n            <div className='mt-5' align='center'>\n                <TextField\n                    label=\"Search...\"\n                    multiline\n                    maxRows={4}\n                    variant=\"filled\"\n                    onChange={e=>setUsername(e.target.value)}\n                />\n                <Button buttonSize='btn--md' buttonStyle='btn--secondary' type='submit' my='mt-2' mx='mx-auto' onClick={submit}>Search</Button>\n                {error}\n            </div>\n            </div>\n            {search_results.map(user => (\n                <li className='found-user'>{user[0]}</li>\n            ))}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}