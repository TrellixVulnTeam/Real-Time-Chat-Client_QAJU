{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Preview.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZES = ['img-large', 'img-small'];\nexport const Preview = props => {\n  _s();\n\n  const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n\n  const history = useHistory(); // when friend is clicked function\n\n  const clickFriend = async () => {\n    const friends = await fetch(\"http://localhost:8000/api/check-friend\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        user_id: props.user_id,\n        friend_id: props.friend_id\n      })\n    });\n\n    if (friends) {\n      history.push('/friend/' + props.friend_id);\n    } else {\n      const response = await fetch(\"http://localhost:8000/api/add-friend\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          user_id: props.user_id,\n          friend_id: props.friend_id\n        })\n      });\n      const data = await response.json();\n    }\n  }; // check if friends\n  // if friends:\n  // Go to messages\n  // else:\n  // send friend request\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friend\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: clickFriend,\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"my-0\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.src,\n          alt: \"friend\",\n          className: `friend mt-2 ${getImgSize}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-name mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js"],"names":["React","useHistory","SIZES","Preview","props","getImgSize","includes","size","history","clickFriend","friends","fetch","method","headers","credentials","body","JSON","stringify","user_id","friend_id","push","response","data","json","src","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,gBAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAa,WAAb,CAAd;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,UAAU,GAAGH,KAAK,CAACI,QAAN,CAAeF,KAAK,CAACG,IAArB,IAA6BH,KAAK,CAACG,IAAnC,GAA0CL,KAAK,CAAC,CAAD,CAAlE,CAD8B,CACyC;;AACvE,QAAMM,OAAO,GAAGP,UAAU,EAA1B,CAF8B,CAI9B;;AACA,QAAMQ,WAAW,GAAG,YAAY;AAC5B,UAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AAAE;AACpEC,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFyD;AAGlEC,MAAAA,WAAW,EAAE,SAHqD;AAIlEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,OAAO,EAAEd,KAAK,CAACc,OADE;AAEjBC,QAAAA,SAAS,EAAEf,KAAK,CAACe;AAFA,OAAf;AAJ4D,KAA3C,CAA3B;;AAUA,QAAIT,OAAJ,EAAa;AACTF,MAAAA,OAAO,CAACY,IAAR,CAAa,aAAWhB,KAAK,CAACe,SAA9B;AACH,KAFD,MAEO;AACH,YAAME,QAAQ,GAAG,MAAMV,KAAK,CAAC,sCAAD,EAAyC;AAAE;AACnEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFwD;AAGjEC,QAAAA,WAAW,EAAE,SAHoD;AAIjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,OAAO,EAAEd,KAAK,CAACc,OADE;AAEjBC,UAAAA,SAAS,EAAEf,KAAK,CAACe;AAFA,SAAf;AAJ2D,OAAzC,CAA5B;AAUA,YAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACH;AACJ,GA1BD,CAL8B,CAkC9B;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAG,MAAA,OAAO,EAAEd,WAAZ;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEL,KAAK,CAACoB,GAAhB;AAAqB,UAAA,GAAG,EAAC,QAAzB;AAAkC,UAAA,SAAS,EAAG,eAAcnB,UAAW;AAAvE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACI;AAAA,kBAAID,KAAK,CAACqB;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApDM;;GAAMtB,O;UAEOF,U;;;KAFPE,O","sourcesContent":["import React from 'react'\nimport {useHistory} from 'react-router-dom'\nimport './Preview.scss'\n\nconst SIZES = ['img-large','img-small']\n\nexport const Preview = (props) => {\n    const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n    const history = useHistory()\n\n    // when friend is clicked function\n    const clickFriend = async () => {\n        const friends = await fetch(\"http://localhost:8000/api/check-friend\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                user_id: props.user_id,\n                friend_id: props.friend_id\n            })\n        })\n\n        if (friends) {\n            history.push('/friend/'+props.friend_id)\n        } else {\n            const response = await fetch(\"http://localhost:8000/api/add-friend\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    user_id: props.user_id,\n                    friend_id: props.friend_id\n                })\n            })\n\n            const data = await response.json()\n        }\n    }\n\n        \n    // check if friends\n    // if friends:\n    // Go to messages\n    // else:\n    // send friend request\n\n    return (\n        <div className='friend'>\n            <i onClick={clickFriend}>\n                <figure className='my-0'>\n                    <img src={props.src} alt='friend' className={`friend mt-2 ${getImgSize}`} />\n                </figure>\n            </i>\n            <div className='friend-name mx-auto'>\n                <p>{props.name}</p>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}