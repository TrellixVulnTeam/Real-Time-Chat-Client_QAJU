{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Navbar } from './components/Navbar';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\nimport { Register } from './pages/Register';\nimport { Friend } from './pages/Friend';\nimport { Room } from './pages/Room';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const refUser = useRef('');\n  console.log(\"App username: \", username); // Get user if logged in\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await fetch(\"http://localhost:8000/api/getuser\", {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const user = await response.json();\n\n      if (user.message !== undefined) {\n        // if error message from server:\n        setUsername(''); // set username to empty (couldn't get user)\n\n        refUser.current = '';\n      } else {\n        // else:\n        setUsername(user.username); // set username to retrieved user's username\n\n        refUser.current = user.username;\n      }\n    };\n\n    fetchUser().catch(refUser.current = ''); // get user, set to empty if cannot get user\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        username: username,\n        setUsername: setUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: () => /*#__PURE__*/_jsxDEV(Home, {\n          username: username,\n          setUsername: setUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          username: username,\n          setUsername: setUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: () => /*#__PURE__*/_jsxDEV(Register, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/friend\",\n        component: () => /*#__PURE__*/_jsxDEV(Friend, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/room\",\n        component: () => /*#__PURE__*/_jsxDEV(Room, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"dYLlpaG5PYa4jFnh/CxRh78JXho=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/App.js"],"names":["React","useState","useEffect","useRef","Navbar","BrowserRouter","Route","Home","Login","Register","Friend","Room","App","username","setUsername","refUser","console","log","fetchUser","response","fetch","headers","credentials","user","json","message","undefined","current","catch"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useEffect, useRef} from 'react'\nimport { Navbar } from './components/Navbar';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {Home} from './pages/Home';\nimport {Login} from './pages/Login';\nimport {Register} from './pages/Register';\nimport {Friend} from './pages/Friend'\nimport {Room} from './pages/Room'\n\nfunction App() {\n    const [username, setUsername] = useState('')\n    const refUser = useRef('')\n\n    console.log(\"App username: \", username)\n\n    // Get user if logged in\n    useEffect(() => {\n        const fetchUser = async() => {\n            const response = await fetch(\"http://localhost:8000/api/getuser\", {\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            })\n\n            const user = await response.json()\n            \n            if (user.message !== undefined) { // if error message from server:\n                setUsername('')               // set username to empty (couldn't get user)\n                refUser.current = ''\n            } else {                          // else:\n                setUsername(user.username)    // set username to retrieved user's username\n                refUser.current = user.username\n            }\n        }\n        \n        fetchUser().catch(refUser.current = '') // get user, set to empty if cannot get user\n    },[])\n\n  return (\n    <>\n        <BrowserRouter>\n            <Navbar username={username} setUsername={setUsername} />\n            <Route path='/' exact   component={() => <Home username={username} setUsername={setUsername}/>}/>\n            <Route path='/login'    component={() => <Login username={username} setUsername={setUsername}/>}/>\n            <Route path='/register' component={() => <Register username={username}/>}/>\n            <Route path='/friend'   component={() => <Friend username={username}/>}/>\n            <Route path='/room'     component={() => <Room username={username}/>}/>\n        </BrowserRouter>\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}