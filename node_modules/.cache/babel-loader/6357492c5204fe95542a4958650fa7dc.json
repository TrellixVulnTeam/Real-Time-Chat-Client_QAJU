{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport { MenuItem } from '@mui/material'; //import FormControl from '@mui/material/FormControl';\n//import InputLabel from '@mui/material/InputLabel';\n\nimport '../pages/Home.scss';\nimport './Preview.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZES = ['img-large', 'img-small'];\nexport const Preview = props => {\n  _s();\n\n  const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n\n  const [isFriend, setIsFriend] = useState(false);\n  const [previewPic, setPreviewPic] = useState('');\n  const [previewName, setPreviewName] = useState('');\n  const [friends, setFriends] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const history = useHistory(); // when friend is clicked function\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const getFriends = async () => {\n      const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-friends`, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const result = await response.json();\n\n      if (isMounted) {\n        setFriends(result['friends']);\n      }\n    };\n\n    const checkFriend = async () => {\n      const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/check-friend`, {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (isMounted) {\n        if (result['message'] === 'true') {\n          setIsFriend(true);\n        } else {\n          setIsFriend(false);\n        }\n      }\n    };\n\n    const getFriendInfo = async () => {\n      const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-friend-info`, {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'Could Not Find User') {\n        console.log(result);\n      } else {\n        if (isMounted) {\n          setPreviewName(result['username']);\n          setPreviewPic(result['profile_pic']);\n        }\n      }\n    };\n\n    const getRoomInfo = async () => {\n      const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-room-info`, {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          room_id: props.room_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'Could Not Find Room') {\n        console.log(result);\n      } else {\n        if (isMounted) {\n          setPreviewName(result['room_name']);\n          setPreviewPic(result['room_pic']);\n        }\n      }\n    };\n\n    if (isMounted) {\n      if (props.isRoom === true) {\n        getRoomInfo().catch(setPreviewName(''), setPreviewPic('default_room.jpeg'));\n        getFriends().catch(setFriends(''));\n      } else {\n        checkFriend().catch(setIsFriend(false));\n        getFriendInfo().catch(setPreviewName(''), setPreviewPic('default.jpeg'));\n      }\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [props.friend_id, props.room_id, props.isRoom]);\n\n  const addFriend = async () => {\n    const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/add-friend`, {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const result = await response.json();\n    props.setReq({\n      \"sender_id\": props.user['_id'],\n      \"friend_id\": props.friend_id,\n      \"req\": \"add-friend\",\n      \"in_pending\": props.inPending.toString()\n    }); //window.location.reload()\n  };\n\n  const removeFriend = async () => {\n    const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/remove-friend`, {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    props.setReq({\n      \"sender_id\": props.user['_id'],\n      \"friend_id\": props.friend_id,\n      \"req\": \"remove-friend\"\n    }); //history.push('/')\n    //window.location.reload();\n  };\n\n  const goToMessages = () => {\n    history.push('/friend/' + props.friend_id);\n  };\n\n  const leaveRoom = async () => {\n    const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/leave-room`, {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        room_id: props.room_id\n      })\n    });\n    window.location.reload();\n    return response;\n  };\n\n  const goToChat = async () => {\n    history.push('/room/' + props.room_id);\n  };\n\n  const sendRoomInvite = async event => {\n    console.log('event target: ', event.target);\n    console.log('event target value: ', event.target.id);\n    const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/add-to-room`, {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: event.target.id,\n        room_id: props.room_id\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n\n    if (result[\"message\"] !== \"Friend is already in room\") {\n      props.setReq({\n        \"sender_id\": props.user['_id'],\n        \"friend_id\": event.target.id,\n        \"room_id\": props.room_id,\n        \"req\": \"add-to-room\"\n      });\n    } //window.location.reload()\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-container mt-2\",\n      id: props.id,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: '../' + previewPic,\n        alt: \"friend\",\n        className: `${getImgSize}`,\n        id: props.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), props.overlay ? !props.isRoom ? // if preview for friend:\n      getImgSize === 'img-large' ?\n      /*#__PURE__*/\n      // if image is large:\n      _jsxDEV(\"div\", {\n        className: `overlay ${getImgSize}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [isFriend === false ?\n          /*#__PURE__*/\n          // if they are not friends:\n          _jsxDEV(Button, {\n            style: {\n              margin: '0 auto',\n              display: \"flex\"\n            },\n            className: \"overlay-btn mt-4\",\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"small\",\n            onClick: addFriend,\n            children: \"Add Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 37\n          }, this) :\n          /*#__PURE__*/\n          // if they are friends:\n          _jsxDEV(Button, {\n            style: {\n              margin: '0 auto',\n              display: \"flex\"\n            },\n            className: \"overlay-btn mt-4\",\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"small\",\n            onClick: goToMessages,\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 37\n          }, this), isFriend === true ? /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: '0 auto',\n              display: \"flex\"\n            },\n            className: \"overlay-btn mt-4\",\n            variant: \"contained\",\n            color: \"error\",\n            size: \"small\",\n            onClick: removeFriend,\n            children: \"Remove Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }, this) : null // if small-image\n      :\n      /*#__PURE__*/\n      // if preview for Room: }\n      _jsxDEV(\"div\", {\n        className: `overlay ${getImgSize}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: '0 auto',\n              display: \"flex\"\n            },\n            className: \"overlay-btn mt-3\",\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"small\",\n            onClick: goToChat,\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: '0 auto',\n              display: \"flex\"\n            },\n            variant: \"contained\",\n            color: \"secondary\",\n            className: \"overlay-btn mt-2\",\n            id: \"basic-button\",\n            \"aria-controls\": \"basic-menu\",\n            \"aria-haspopup\": \"true\",\n            \"aria-expanded\": open ? 'true' : undefined,\n            onClick: handleClick,\n            children: \"Invite Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"basic-menu\",\n            anchorEl: anchorEl,\n            open: open,\n            onClose: handleClose,\n            MenuListProps: {\n              'aria-labelledby': 'basic-button'\n            },\n            children: Object.keys(friends).map(key => /*#__PURE__*/_jsxDEV(MenuItem, {\n              sx: {\n                backgroundColor: '#242424',\n                '&:hover': {\n                  backgroundColor: '#2d2d2d'\n                }\n              },\n              onClick: e => sendRoomInvite(e),\n              children: /*#__PURE__*/_jsxDEV(Preview, {\n                alt: \"friend\",\n                size: \"img-small\",\n                isRoom: false,\n                friend_id: friends[key],\n                id: friends[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: '0 auto',\n              display: \"flex\"\n            },\n            variant: \"contained\",\n            color: \"error\",\n            className: \"overlay-btn mt-2\",\n            onClick: leaveRoom,\n            children: \"Leave Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-name\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: previewName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"VUFQC8lSW2cqiZO0nU5e/gb+RQ8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js"],"names":["React","useState","useEffect","useHistory","Button","Menu","MenuItem","SIZES","Preview","props","getImgSize","includes","size","isFriend","setIsFriend","previewPic","setPreviewPic","previewName","setPreviewName","friends","setFriends","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","history","isMounted","getFriends","response","fetch","process","env","REACT_APP_SERVER_URL","headers","credentials","result","json","checkFriend","method","body","JSON","stringify","friend_id","getFriendInfo","console","log","getRoomInfo","room_id","isRoom","catch","addFriend","setReq","user","inPending","toString","removeFriend","goToMessages","push","leaveRoom","window","location","reload","goToChat","sendRoomInvite","target","id","overlay","margin","display","undefined","Object","keys","map","key","backgroundColor","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport { MenuItem } from '@mui/material';\n\n//import FormControl from '@mui/material/FormControl';\n//import InputLabel from '@mui/material/InputLabel';\n\nimport '../pages/Home.scss'\nimport './Preview.scss'\n\nconst SIZES = ['img-large','img-small']\n\nexport const Preview = (props) => {\n    const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n    const [isFriend, setIsFriend] = useState(false)\n    const [previewPic, setPreviewPic] = useState('')\n    const [previewName, setPreviewName] = useState('')\n    const [friends, setFriends] = useState(false)\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const history = useHistory()\n\n    // when friend is clicked function\n    useEffect(() => {\n        let isMounted = true\n        const getFriends = async() => {\n            const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-friends`, {\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            })\n\n            const result = await response.json()\n            if (isMounted) {\n                setFriends(result['friends']) \n            }\n        }\n\n        const checkFriend = async () => {\n            const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/check-friend`, { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (isMounted) {\n                if (result['message'] === 'true') {\n                    setIsFriend(true)\n                } else {\n                    setIsFriend(false)\n                }\n            }\n        }\n        const getFriendInfo = async () => {\n            const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-friend-info`, { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'Could Not Find User') {\n                console.log(result)\n            } else {\n                if (isMounted) {\n                    setPreviewName(result['username'])\n                    setPreviewPic(result['profile_pic'])\n                }\n            }\n        }\n        const getRoomInfo = async () => {\n            const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/get-room-info`, { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    room_id: props.room_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'Could Not Find Room') {\n                console.log(result)\n            } else {\n                if (isMounted) {\n                    setPreviewName(result['room_name'])\n                    setPreviewPic(result['room_pic'])\n                }\n            }\n        }\n\n        if (isMounted) {\n            if (props.isRoom === true) {\n                getRoomInfo().catch(setPreviewName(''), setPreviewPic('default_room.jpeg'))\n                getFriends().catch(setFriends(''))\n            } else {\n                checkFriend().catch(setIsFriend(false))\n                getFriendInfo().catch(setPreviewName(''), setPreviewPic('default.jpeg'))\n            }\n        }\n\n        return () => { isMounted=false }\n\n    }, [props.friend_id, props.room_id, props.isRoom])\n\n    const addFriend = async() => {\n        const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/add-friend`, { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const result = await response.json();\n        props.setReq({\"sender_id\": props.user['_id'], \"friend_id\": props.friend_id, \"req\": \"add-friend\", \"in_pending\":props.inPending.toString()})\n\n        //window.location.reload()\n    }\n\n    const removeFriend = async() => {\n        const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/remove-friend`, { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const result = await response.json()\n        console.log(result);\n        props.setReq({\"sender_id\": props.user['_id'], \"friend_id\": props.friend_id, \"req\": \"remove-friend\"})\n\n        //history.push('/')\n        //window.location.reload();\n    }\n\n\n    const goToMessages = () => {\n        history.push('/friend/' + props.friend_id)\n    }\n\n    const leaveRoom = async() => {\n        const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/leave-room`, { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                room_id: props.room_id\n            })\n        })\n        window.location.reload();\n        return response\n    }\n\n    const goToChat = async() => {\n        history.push('/room/' + props.room_id)\n    }\n\n    const sendRoomInvite = async(event) => {\n        console.log('event target: ', event.target)\n        console.log('event target value: ', event.target.id)\n        const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/add-to-room`, { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: event.target.id,\n                room_id: props.room_id\n            })\n        })\n\n        const result = await response.json();\n        console.log(result)\n        if (result[\"message\"] !== \"Friend is already in room\") {\n            props.setReq({\"sender_id\": props.user['_id'], \"friend_id\": event.target.id, \"room_id\": props.room_id, \"req\": \"add-to-room\"})\n        }\n        //window.location.reload()\n    }\n\n\n    return (\n        <div>\n            <div className='friend-container mt-2' id={props.id}>\n                <img src={'../'+previewPic} alt='friend' className={`${getImgSize}`} id={props.id} />\n                { props.overlay ?\n                    !props.isRoom ? // if preview for friend:\n                        getImgSize === 'img-large' ? // if image is large:\n                        <div className={`overlay ${getImgSize}`}>  \n                        <div className='col'>\n                            {isFriend === false ? // if they are not friends:\n                                    <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-4' variant='contained' color='secondary' size='small' onClick={addFriend}>Add Friend</Button>\n                                :   // if they are friends:\n                                    <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-4' variant='contained' color='secondary' size='small' onClick={goToMessages}>Message</Button>\n                            }\n                            {isFriend === true ?\n                                    <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-4' variant='contained' color='error' size='small' onClick={removeFriend}>Remove Friend</Button>\n                                : null}\n                        </div>\n                        </div>\n                        : null // if small-image\n            : // if preview for Room: }\n                <div className={`overlay ${getImgSize}`}>  \n                    <div className='col'>\n                            <Button style={{margin: '0 auto', display: \"flex\"}} className='overlay-btn mt-3' variant='contained' color='secondary' size='small' onClick={goToChat}>Chat</Button>\n                            <Button\n                                style={{margin: '0 auto', display: \"flex\"}}\n                                variant='contained'\n                                color='secondary'\n                                className='overlay-btn mt-2'\n                                id=\"basic-button\"\n                                aria-controls=\"basic-menu\"\n                                aria-haspopup=\"true\"\n                                aria-expanded={open ? 'true' : undefined}\n                                onClick={handleClick}\n                            >\n                            Invite Friend\n                            </Button>\n                            <Menu\n                                id=\"basic-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={handleClose}\n                                MenuListProps={{'aria-labelledby': 'basic-button',}}\n                                \n                            >\n                                {Object.keys(friends).map(key => \n                                    <MenuItem key={key} sx={{backgroundColor: '#242424', '&:hover': {backgroundColor: '#2d2d2d'}}} onClick={(e) => sendRoomInvite(e)}  >\n                                        <Preview alt='friend' size='img-small' isRoom={false} friend_id={friends[key]} id={friends[key]} />\n                                    </MenuItem>\n                                )}\n\n                            </Menu>\n                            <Button style={{margin: '0 auto', display: \"flex\"}} variant='contained' color='error' className='overlay-btn mt-2' onClick={leaveRoom}>Leave Room</Button>\n                    </div>\n                </div> : null } {/* if no overlay, set to null */}\n\n        </div>\n\n            <div className='friend-name'>\n                <p>{previewName}</p>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}