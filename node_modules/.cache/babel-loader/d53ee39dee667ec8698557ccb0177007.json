{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Friend.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Preview } from '../components/Preview';\nimport { Message } from '../components/Message';\nimport { MessageBox } from '../components/MessageBox';\nimport './RoomFriend.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Friend = props => {\n  _s();\n\n  const history = useHistory();\n  const [msg, setMsg] = useState();\n  let router_data = useParams();\n  let friend_id = router_data['friend_id'];\n\n  if (!localStorage.getItem(\"user\")) {\n    history.push('/login');\n  }\n\n  const getMessages = async () => {\n    const response = await fetch(\"http://localhost:8000/api/get-messages\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: friend_id\n      })\n    });\n    const result = await response.json();\n    return result;\n  };\n\n  const [messages, setMessages] = useState(getMessages());\n  let socket = new WebSocket(\"ws://localhost:8000/ws/\" + friend_id);\n  useEffect(() => {\n    socket.onopen = () => {\n      console.log(\"YEEEE from the client\");\n    };\n\n    socket.onmessage = msg => {\n      console.log(msg);\n    };\n\n    socket.onclose = event => {\n      console.log(\"socket closed connection: \", event);\n    };\n    /*\n    const getMessages = async() => {\n        const response = await fetch(\"http://localhost:8000/api/get-messages\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: friend_id\n            })\n        })\n         const result = await response.json()\n    }\n    getMessages()\n    */\n\n  });\n\n  const sendMsg = () => {\n    socket.send(msg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container room-friend-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Preview, {\n        alt: \"friend\",\n        size: \"img-large\",\n        isRoom: false,\n        friend_id: friend_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MessageBox, {\n        onChange: setMsg,\n        onClick: sendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Friend, \"DgjJfcrZ/zT0wfdVJ2nWcbo4ElI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Friend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friend\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Friend.js"],"names":["React","useEffect","useState","useHistory","useParams","Preview","Message","MessageBox","Friend","props","history","msg","setMsg","router_data","friend_id","localStorage","getItem","push","getMessages","response","fetch","method","headers","credentials","body","JSON","stringify","result","json","messages","setMessages","socket","WebSocket","onopen","console","log","onmessage","onclose","event","sendMsg","send"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {Preview} from '../components/Preview'\nimport {Message} from '../components/Message'\nimport {MessageBox} from '../components/MessageBox'\nimport './RoomFriend.scss'\n\n\nexport const Friend = (props) => {\n    const history = useHistory()\n    const [msg, setMsg] = useState()\n\n    let router_data = useParams()\n    let friend_id = router_data['friend_id']\n\n    if (!localStorage.getItem(\"user\")) {\n        history.push('/login')\n    }\n\n    const getMessages = async() => {\n        const response = await fetch(\"http://localhost:8000/api/get-messages\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: friend_id\n            })\n        })\n\n        const result = await response.json()\n        return result\n    }\n\n    const [messages, setMessages] = useState(getMessages())\n\n    let socket = new WebSocket(\"ws://localhost:8000/ws/\"+friend_id)\n\n    useEffect(() => {\n        socket.onopen = () => {\n            console.log(\"YEEEE from the client\")\n        }\n\n        socket.onmessage = (msg) => {\n            console.log(msg)\n        }\n\n        socket.onclose = (event) => {\n            console.log(\"socket closed connection: \", event)\n        }\n        /*\n        const getMessages = async() => {\n            const response = await fetch(\"http://localhost:8000/api/get-messages\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: friend_id\n                })\n            })\n\n            const result = await response.json()\n        }\n        getMessages()\n        */\n\n    })\n\n    const sendMsg = () => {\n        socket.send(msg)\n    }\n\n    return (\n        <div className='container room-friend-container'>\n            <div className='row mt-5'>\n                <Preview alt='friend' size='img-large' isRoom={false} friend_id={friend_id} />\n            </div>\n\n            <div className='row'>\n            </div>\n\n            <div className='row'>\n                <MessageBox onChange={setMsg} onClick={sendMsg}/>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}