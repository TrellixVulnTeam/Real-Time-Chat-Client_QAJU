{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import {useHistory} from 'react-router-dom'\n\nimport { Button } from './Button';\nimport '../pages/Home.scss';\nimport './Preview.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZES = ['img-large', 'img-small'];\nexport const Preview = props => {\n  _s();\n\n  const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n\n  const [isFriend, setIsFriend] = useState(false);\n  const [profilePic, setProfilePic] = useState('');\n  const [friendName, setFriendName] = useState(''); // when friend is clicked function\n\n  useEffect(() => {\n    const checkFriend = async () => {\n      const response = await fetch(\"http://localhost:8000/api/check-friend\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'Success') {\n        setIsFriend(true);\n      } else {\n        setIsFriend(false);\n      }\n    };\n\n    const getFriendInfo = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-friend-info\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          friend_id: props.friend_id\n        })\n      });\n      const result = await response.json();\n\n      if (result['message'] === 'Could Not Find User') {\n        console.log(result);\n      } else {\n        setIsFriend(false);\n      }\n    };\n\n    checkFriend();\n  }, [props.friend_id]);\n\n  const addFriend = async () => {\n    const response = await fetch(\"http://localhost:8000/api/add-friend\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const data = await response.json();\n\n    if (data.message === 'Success') {\n      console.log(\"friend added\");\n    } else {\n      console.log(\"couldn't add friend\");\n      console.log(data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.src,\n        alt: \"friend\",\n        className: `mt-2 ${getImgSize}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), getImgSize === 'img-large' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: `overlay ${getImgSize}`,\n        children: [isFriend === false ? /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--sm\",\n          type: \"submit\",\n          className: \"overlay-btn\",\n          onClick: addFriend,\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--sm\",\n          type: \"submit\",\n          className: \"overlay-btn\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), isFriend === true ? /*#__PURE__*/_jsxDEV(Button, {\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--sm\",\n          type: \"submit\",\n          className: \"overlay-btn\",\n          children: \"Remove Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend-name\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"hAvHNwM4HETk0xcMS2EGuIXCWvA=\");\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js"],"names":["React","useState","useEffect","Button","SIZES","Preview","props","getImgSize","includes","size","isFriend","setIsFriend","profilePic","setProfilePic","friendName","setFriendName","checkFriend","response","fetch","method","headers","credentials","body","JSON","stringify","friend_id","result","json","getFriendInfo","console","log","addFriend","data","message","src","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n//import {useHistory} from 'react-router-dom'\nimport {Button} from './Button'\nimport '../pages/Home.scss'\nimport './Preview.scss'\n\nconst SIZES = ['img-large','img-small']\n\nexport const Preview = (props) => {\n    const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n    const [isFriend, setIsFriend] = useState(false)\n    const [profilePic, setProfilePic] = useState('')\n    const [friendName, setFriendName] = useState('')\n\n    // when friend is clicked function\n    useEffect(() => {\n        const checkFriend = async () => {\n            const response = await fetch(\"http://localhost:8000/api/check-friend\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'Success') {\n                setIsFriend(true)\n            } else {\n                setIsFriend(false)\n            }\n        }\n        const getFriendInfo = async () => {\n            const response = await fetch(\"http://localhost:8000/api/get-friend-info\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    friend_id: props.friend_id\n                })\n            })\n\n            const result = await response.json()\n\n            if (result['message'] === 'Could Not Find User') {\n                console.log(result)\n            } else {\n                setIsFriend(false)\n            }\n        }\n        checkFriend()\n    }, [props.friend_id])\n\n    const addFriend = async() => {\n        const response = await fetch(\"http://localhost:8000/api/add-friend\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const data = await response.json()\n\n        if (data.message === 'Success') {\n            console.log(\"friend added\")\n        } else {\n            console.log(\"couldn't add friend\")\n            console.log(data.message)\n        }\n    }\n\n    return (\n        <div>\n            <div className='friend-container'>\n                <img src={props.src} alt='friend' className={`mt-2 ${getImgSize}`} />\n                { getImgSize === 'img-large' ? \n                        <div class={`overlay ${getImgSize}`}>\n                            {isFriend === false ?\n                                <Button buttonStyle='btn--primary' buttonSize='btn--sm' type=\"submit\" className='overlay-btn' onClick={addFriend}>Add Friend</Button>\n                            :\n                                <Button buttonStyle='btn--primary' buttonSize='btn--sm' type=\"submit\" className='overlay-btn'>Message</Button>\n                            }\n                            {isFriend === true ?\n                                <Button buttonStyle='btn--primary' buttonSize='btn--sm' type=\"submit\" className='overlay-btn'>Remove Friend</Button>\n                                : null}\n                        </div>\n                        : null }\n            </div>\n            <div className='friend-name'>\n                <p>{props.name}</p>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}