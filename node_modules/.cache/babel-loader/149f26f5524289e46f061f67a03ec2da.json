{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport useStateWithCallback from 'use-state-with-callback'; //import {Button} from '../components/Button'\n\nimport { useHistory } from 'react-router-dom';\nimport { Preview } from '../components/Preview'; //import Alert from '@material-ui/lab/Alert'\n\nimport { Search } from '../components/Search';\nimport { CreateRoom } from '../components/CreateRoom';\nimport './Home.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = props => {\n  _s();\n\n  const socket = new WebSocket(\"ws://localhost:8000/ws/\");\n  const socketRef = useRef();\n  socketRef.current = socket;\n  const [search, setSearch] = useState(false);\n  const [createRoom, setCreateRoom] = useState(false);\n  const [friends, setFriends] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [requests, setRequests] = useState(''); // friend requests\n\n  const requestsRef = useRef();\n  requestsRef.current = requests;\n  const [req, setReq] = useStateWithCallback(null, req => {\n    if (req !== null && socket.current.readyState === 1) {\n      socket.current.send(JSON.stringify(req));\n      setReq(null);\n    }\n  });\n  const history = useHistory();\n  props.setRoomID(null);\n\n  if (!localStorage.getItem(\"user\")) {\n    history.push('/login');\n  }\n\n  const showSearchWindow = () => setSearch(!search); // toggle search bar\n\n\n  const showRoomWindow = () => setCreateRoom(!createRoom); // toggle search bar\n\n\n  const searchClass = search ? 'rotate-icon' : '';\n  const roomClass = createRoom ? 'rotate-icon' : '';\n  useEffect(() => {\n    socketRef.current.onopen = event => {\n      console.log(\"Connection at: \", \"ws://localhost:8000/ws/\"); //socket.current.send(JSON.stringify({friend_id: 0+'', req: \"HELP ME\"}))\n    };\n\n    socketRef.current.onmessage = request => {\n      let new_req = JSON.parse(request.data);\n      console.log(\"requests: \", requests);\n\n      switch (new_req['req']) {\n        case 'add-friend':\n          console.log(\"requests: \", requestsRef.current);\n          let filteredRequests = [];\n          let isInRequests = false; // check if friend is in requests\n\n          Object.keys(requestsRef.current).map(key => {\n            if (requestsRef.current[key] !== new_req['friend_id']) {\n              // if friend is not current request:\n              filteredRequests.push(requests[key]); // add to array\n            } else {\n              isInRequests = true; // otherwise: set isInRequests to true\n            }\n\n            return requestsRef.current[key];\n          });\n          console.log(\"isInRequests: \", isInRequests);\n\n          if (new_req['sender_id'] === props.user['_id']) {\n            // if this client is the sender:\n            if (isInRequests) {\n              // if accepting friend request:\n              console.log(\"Accepting friend request\");\n              console.log(\"new requests: \", filteredRequests);\n              setRequests(filteredRequests); // setRequests to array without friend that was just added\n\n              setFriends(prev => [...prev, new_req['friend_id']]); // setFriends with newly added friend\n            }\n          } else {\n            // if this client is the receiver:\n            if (new_req['in_pending'] === 'true') {\n              // if other client accepted friend request:\n              console.log(\"Friend accepted request\");\n              setFriends(prev => [...prev, new_req['friend_id']]); // setFriends with newly added friend\n            } else {\n              // if received friend request from other client:\n              console.log(\"Received friend request\");\n              setRequests(prev => [...prev, new_req['friend_id']]); // setRequests with client who sent request\n            }\n          }\n\n          break;\n\n        case 'remove-friend':\n          let filteredArray = [];\n          Object.keys(friends).map(key => {\n            console.log(\"friend: \", friends[key]);\n\n            if (friends[key] !== new_req['friend_id']) {\n              filteredArray.push(friends[key]);\n            }\n\n            return friends[key];\n          });\n          setFriends(filteredArray);\n          break;\n\n        case 'add-to-room':\n          console.log(\"In add-to-room\");\n          console.log(\"Is receiver: \", new_req['sender_id'] !== props.user['_id']);\n\n          if (new_req['sender_id'] !== props.user['_id']) {\n            // if this client is not the sender:\n            window.location.reload(); //setRooms(prev => [...prev, new_req['room_id']])    // setRequests with client who sent request (this doesn't work, very annoying)\n          }\n\n          break;\n\n        default:\n          setReq(null);\n          break;\n      }\n    };\n\n    socketRef.current.onclose = event => {\n      console.log(\"socket closed connection: \", event);\n    };\n\n    return () => {\n      socketRef.current.close();\n      isMounted = false;\n    };\n  }, []);\n  console.log(\"requests in home: \", requests);\n  useEffect(() => {\n    let isMounted = true;\n\n    const getFriends = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-friends\", {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const result = await response.json();\n\n      if (isMounted) {\n        setFriends(result['friends']);\n      }\n    };\n\n    const getFriendReqs = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-friend-reqs\", {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const result = await response.json();\n\n      if (isMounted) {\n        setRequests(result['requests']);\n      }\n    };\n\n    const getRooms = async () => {\n      const response = await fetch(\"http://localhost:8000/api/get-rooms\", {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const result = await response.json();\n\n      if (isMounted) {\n        setRooms(result['rooms']);\n      }\n    };\n\n    if (isMounted) {\n      getFriends().catch(setFriends(''));\n      getFriendReqs().catch(setRequests(''));\n      getRooms().catch(setRooms([]));\n    } //        socket.current = new WebSocket(\"ws://localhost:8000/ws/\")\n\n    /*\n    socketRef.current.onopen = (event) => {\n        console.log(\"Connection at: \", \"ws://localhost:8000/ws/\")\n        //socket.current.send(JSON.stringify({friend_id: 0+'', req: \"HELP ME\"}))\n    }\n    socketRef.current.onmessage = (request) => {\n        let new_req = JSON.parse(request.data)\n        console.log(\"requests: \", requests)\n        switch(new_req['req']) {\n            case 'add-friend':\n                console.log(\"requests: \", requestsRef.current)\n                let filteredRequests = [];\n                let isInRequests = false;\n                // check if friend is in requests\n                Object.keys(requestsRef.current).map(key => {\n                    if (requestsRef.current[key] !== new_req['friend_id']) { // if friend is not current request:\n                        filteredRequests.push(requests[key])   // add to array\n                    } else {\n                        isInRequests = true;                  // otherwise: set isInRequests to true\n                    }\n                    return requestsRef.current[key]\n                })\n                console.log(\"isInRequests: \", isInRequests)\n                if (new_req['sender_id'] === props.user['_id']) {           // if this client is the sender:\n                    if(isInRequests) {                                          // if accepting friend request:\n                        console.log(\"Accepting friend request\")\n                        console.log(\"new requests: \", filteredRequests)\n                        setRequests(filteredRequests)                               // setRequests to array without friend that was just added\n                        setFriends(prev => [...prev, new_req['friend_id']])         // setFriends with newly added friend\n                    }                                                       \n                } else {                                                    // if this client is the receiver:\n                    if(new_req['in_pending'] === 'true') {                      // if other client accepted friend request:\n                        console.log(\"Friend accepted request\")\n                        setFriends(prev => [...prev, new_req['friend_id']])         // setFriends with newly added friend\n                    } else {                                                // if received friend request from other client:\n                        console.log(\"Received friend request\")\n                        setRequests(prev => [...prev, new_req['friend_id']])    // setRequests with client who sent request\n                    }\n                }\n                break;\n            case 'remove-friend':\n                let filteredArray = [];\n                Object.keys(friends).map(key => {\n                    console.log(\"friend: \", friends[key])\n                    if (friends[key] !== new_req['friend_id']) {\n                       filteredArray.push(friends[key])\n                    }\n                    return friends[key]\n                })\n                setFriends(filteredArray)\n                break;\n            case 'add-to-room':\n                console.log(\"In add-to-room\")\n                console.log(\"Is receiver: \", new_req['sender_id'] !== props.user['_id'])\n                if (new_req['sender_id'] !== props.user['_id']) {    // if this client is not the sender:\n                    window.location.reload();\n                    //setRooms(prev => [...prev, new_req['room_id']])    // setRequests with client who sent request (this doesn't work, very annoying)\n                }\n                break;\n            default:\n                setReq(null)\n                break;\n        }\n    }\n    socketRef.current.onclose = (event) => {\n        console.log(\"socket closed connection: \", event)\n    }\n    \n    return () => { socketRef.current.close(); isMounted=false }\n    */\n\n  }, []); //const sendReq = () =>{ console.log(\"req in sendReq: \", req); socket.current.send(req); }\n  //console.log(\"req in home: \", req)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"rooms-header-text mb-0\",\n        children: \"Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fas fa-plus-circle add-btn mb-0 ${searchClass}`,\n        onClick: showSearchWindow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-window-container\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        search: search,\n        setSearch: setSearch,\n        setReq: data => {\n          setReq(data);\n        },\n        user: props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: friends === null ? null : Object.keys(friends).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12 col-md-4 col-lg-2 px-0 mx-3\",\n        children: /*#__PURE__*/_jsxDEV(Preview, {\n          alt: \"friend\",\n          size: \"img-large\",\n          isRoom: false,\n          friend_id: friends[key],\n          setReq: data => {\n            setReq(data);\n          },\n          user: props.user,\n          inPending: false,\n          overlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"rooms-header-text mt-2\",\n        children: \"Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fas fa-plus-circle add-btn mb-0 ${roomClass}`,\n        onClick: showRoomWindow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-window-container\",\n      children: /*#__PURE__*/_jsxDEV(CreateRoom, {\n        createRoom: createRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: rooms === null ? null : Object.keys(rooms).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12 col-md-4 col-lg-2 px-0 mx-3\",\n        children: /*#__PURE__*/_jsxDEV(Preview, {\n          alt: \"default_room.jpeg\",\n          size: \"img-large\",\n          isRoom: true,\n          room_id: rooms[key],\n          setReq: data => {\n            setReq(data);\n          },\n          user: props.user,\n          overlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"rooms-header-text mb-0\",\n        children: \"Pending Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: requests === null ? null : Object.keys(requests).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12 col-md-4 col-lg-2 px-0 mx-3\",\n        children: /*#__PURE__*/_jsxDEV(Preview, {\n          src: \"default_pic.jpeg\",\n          alt: \"friend\",\n          size: \"img-large\",\n          name: \"username\",\n          isRoom: false,\n          friend_id: requests[key],\n          setReq: data => {\n            setReq(data);\n          },\n          user: props.user,\n          inPending: true,\n          overlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-5 mb-3 mx-auto text-muted\",\n      children: \"\\xA9 2017\\u20132021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"jw7Jsz2piEEYsKNYm6/rA6qyK0o=\", false, function () {\n  return [useStateWithCallback, useHistory];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/pages/Home.js"],"names":["React","useState","useEffect","useRef","useStateWithCallback","useHistory","Preview","Search","CreateRoom","Home","props","socket","WebSocket","socketRef","current","search","setSearch","createRoom","setCreateRoom","friends","setFriends","rooms","setRooms","requests","setRequests","requestsRef","req","setReq","readyState","send","JSON","stringify","history","setRoomID","localStorage","getItem","push","showSearchWindow","showRoomWindow","searchClass","roomClass","onopen","event","console","log","onmessage","request","new_req","parse","data","filteredRequests","isInRequests","Object","keys","map","key","user","prev","filteredArray","window","location","reload","onclose","close","isMounted","getFriends","response","fetch","headers","credentials","result","json","getFriendReqs","getRooms","catch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport useStateWithCallback from 'use-state-with-callback';\n//import {Button} from '../components/Button'\nimport {useHistory} from 'react-router-dom'\nimport {Preview} from '../components/Preview'\n//import Alert from '@material-ui/lab/Alert'\nimport {Search} from '../components/Search'\nimport {CreateRoom} from '../components/CreateRoom'\nimport './Home.scss'\n\nexport const Home = (props) => {\n    const socket = new WebSocket(\"ws://localhost:8000/ws/\")\n    const socketRef = useRef();\n    socketRef.current = socket;\n\n    const [search, setSearch] = useState(false)\n    const [createRoom, setCreateRoom] = useState(false)\n    const [friends, setFriends] = useState('')\n    const [rooms, setRooms] = useState([])\n    const [requests, setRequests] = useState('') // friend requests\n    const requestsRef = useRef();\n    requestsRef.current = requests;\n    const [req, setReq] = useStateWithCallback(null, req => {\n        if (req !== null && socket.current.readyState === 1) {\n            socket.current.send(JSON.stringify(req));\n            setReq(null);\n        } \n    });\n    const history = useHistory()\n    props.setRoomID(null)\n\n    if(!localStorage.getItem(\"user\")) {\n        history.push('/login')\n    }\n\n    const  showSearchWindow = () => setSearch(!search) // toggle search bar\n    const  showRoomWindow = () => setCreateRoom(!createRoom) // toggle search bar\n    const searchClass = search ? 'rotate-icon' : '';\n    const roomClass = createRoom ? 'rotate-icon' : '';\n\n    useEffect(() => {\n        socketRef.current.onopen = (event) => {\n            console.log(\"Connection at: \", \"ws://localhost:8000/ws/\")\n            //socket.current.send(JSON.stringify({friend_id: 0+'', req: \"HELP ME\"}))\n        }\n        socketRef.current.onmessage = (request) => {\n            let new_req = JSON.parse(request.data)\n            console.log(\"requests: \", requests)\n            switch(new_req['req']) {\n                case 'add-friend':\n                    console.log(\"requests: \", requestsRef.current)\n                    let filteredRequests = [];\n                    let isInRequests = false;\n                    // check if friend is in requests\n                    Object.keys(requestsRef.current).map(key => {\n                        if (requestsRef.current[key] !== new_req['friend_id']) { // if friend is not current request:\n                            filteredRequests.push(requests[key])   // add to array\n                        } else {\n                            isInRequests = true;                  // otherwise: set isInRequests to true\n                        }\n                        return requestsRef.current[key]\n                    })\n                    console.log(\"isInRequests: \", isInRequests)\n                    if (new_req['sender_id'] === props.user['_id']) {           // if this client is the sender:\n                        if(isInRequests) {                                          // if accepting friend request:\n                            console.log(\"Accepting friend request\")\n                            console.log(\"new requests: \", filteredRequests)\n                            setRequests(filteredRequests)                               // setRequests to array without friend that was just added\n                            setFriends(prev => [...prev, new_req['friend_id']])         // setFriends with newly added friend\n                        }                                                       \n                    } else {                                                    // if this client is the receiver:\n                        if(new_req['in_pending'] === 'true') {                      // if other client accepted friend request:\n                            console.log(\"Friend accepted request\")\n                            setFriends(prev => [...prev, new_req['friend_id']])         // setFriends with newly added friend\n                        } else {                                                // if received friend request from other client:\n                            console.log(\"Received friend request\")\n                            setRequests(prev => [...prev, new_req['friend_id']])    // setRequests with client who sent request\n                        }\n                    }\n                    break;\n                case 'remove-friend':\n                    let filteredArray = [];\n                    Object.keys(friends).map(key => {\n                        console.log(\"friend: \", friends[key])\n                        if (friends[key] !== new_req['friend_id']) {\n                           filteredArray.push(friends[key])\n                        }\n                        return friends[key]\n                    })\n                    setFriends(filteredArray)\n                    break;\n                case 'add-to-room':\n                    console.log(\"In add-to-room\")\n                    console.log(\"Is receiver: \", new_req['sender_id'] !== props.user['_id'])\n                    if (new_req['sender_id'] !== props.user['_id']) {    // if this client is not the sender:\n                        window.location.reload();\n                        //setRooms(prev => [...prev, new_req['room_id']])    // setRequests with client who sent request (this doesn't work, very annoying)\n                    }\n                    break;\n                default:\n                    setReq(null)\n                    break;\n            }\n        }\n        socketRef.current.onclose = (event) => {\n            console.log(\"socket closed connection: \", event)\n        }\n        return () => { socketRef.current.close(); isMounted=false }\n    }, [])\n\n    console.log(\"requests in home: \", requests)\n\n    useEffect(() => {\n        let isMounted = true;\n        const getFriends = async() => {\n            const response = await fetch(\"http://localhost:8000/api/get-friends\", {\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            })\n\n            const result = await response.json()\n            if (isMounted) {\n                setFriends(result['friends']) \n            }\n        }\n        const getFriendReqs = async() => {\n            const response = await fetch(\"http://localhost:8000/api/get-friend-reqs\", {\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            })\n            const result = await response.json()\n            if (isMounted) {\n                setRequests(result['requests'])\n            }\n        }\n        const getRooms = async() => {\n            const response = await fetch(\"http://localhost:8000/api/get-rooms\", {\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include'\n            })\n\n            const result = await response.json()\n            if (isMounted) {\n                setRooms(result['rooms']) \n            }\n        }\n\n        if (isMounted) {\n            getFriends().catch(setFriends(''))\n            getFriendReqs().catch(setRequests(''))\n            getRooms().catch(setRooms([]))\n        }\n\n//        socket.current = new WebSocket(\"ws://localhost:8000/ws/\")\n\n        /*\n        socketRef.current.onopen = (event) => {\n            console.log(\"Connection at: \", \"ws://localhost:8000/ws/\")\n            //socket.current.send(JSON.stringify({friend_id: 0+'', req: \"HELP ME\"}))\n        }\n        socketRef.current.onmessage = (request) => {\n            let new_req = JSON.parse(request.data)\n            console.log(\"requests: \", requests)\n            switch(new_req['req']) {\n                case 'add-friend':\n                    console.log(\"requests: \", requestsRef.current)\n                    let filteredRequests = [];\n                    let isInRequests = false;\n                    // check if friend is in requests\n                    Object.keys(requestsRef.current).map(key => {\n                        if (requestsRef.current[key] !== new_req['friend_id']) { // if friend is not current request:\n                            filteredRequests.push(requests[key])   // add to array\n                        } else {\n                            isInRequests = true;                  // otherwise: set isInRequests to true\n                        }\n                        return requestsRef.current[key]\n                    })\n                    console.log(\"isInRequests: \", isInRequests)\n                    if (new_req['sender_id'] === props.user['_id']) {           // if this client is the sender:\n                        if(isInRequests) {                                          // if accepting friend request:\n                            console.log(\"Accepting friend request\")\n                            console.log(\"new requests: \", filteredRequests)\n                            setRequests(filteredRequests)                               // setRequests to array without friend that was just added\n                            setFriends(prev => [...prev, new_req['friend_id']])         // setFriends with newly added friend\n                        }                                                       \n                    } else {                                                    // if this client is the receiver:\n                        if(new_req['in_pending'] === 'true') {                      // if other client accepted friend request:\n                            console.log(\"Friend accepted request\")\n                            setFriends(prev => [...prev, new_req['friend_id']])         // setFriends with newly added friend\n                        } else {                                                // if received friend request from other client:\n                            console.log(\"Received friend request\")\n                            setRequests(prev => [...prev, new_req['friend_id']])    // setRequests with client who sent request\n                        }\n                    }\n                    break;\n                case 'remove-friend':\n                    let filteredArray = [];\n                    Object.keys(friends).map(key => {\n                        console.log(\"friend: \", friends[key])\n                        if (friends[key] !== new_req['friend_id']) {\n                           filteredArray.push(friends[key])\n                        }\n                        return friends[key]\n                    })\n                    setFriends(filteredArray)\n                    break;\n                case 'add-to-room':\n                    console.log(\"In add-to-room\")\n                    console.log(\"Is receiver: \", new_req['sender_id'] !== props.user['_id'])\n                    if (new_req['sender_id'] !== props.user['_id']) {    // if this client is not the sender:\n                        window.location.reload();\n                        //setRooms(prev => [...prev, new_req['room_id']])    // setRequests with client who sent request (this doesn't work, very annoying)\n                    }\n                    break;\n                default:\n                    setReq(null)\n                    break;\n            }\n        }\n        socketRef.current.onclose = (event) => {\n            console.log(\"socket closed connection: \", event)\n        }\n        \n        return () => { socketRef.current.close(); isMounted=false }\n        */\n    }, [])\n\n    //const sendReq = () =>{ console.log(\"req in sendReq: \", req); socket.current.send(req); }\n\n    //console.log(\"req in home: \", req)\n\n    return(\n        <div className='container'>\n            <div className=\"rooms-header\">\n                <h2 className=\"rooms-header-text mb-0\">Friends</h2>\n                <i className={`fas fa-plus-circle add-btn mb-0 ${searchClass}`} onClick={showSearchWindow} />\n            </div>\n            <div className=\"search-window-container\">\n                <Search search={search} setSearch={setSearch} setReq={ data => {setReq(data);} } user={props.user} />\n            </div>\n            <div className='row'>\n                {friends === null ? null : Object.keys(friends).map(key => \n                    <div key={key} className='col-sm-12 col-md-4 col-lg-2 px-0 mx-3'>\n                        <Preview alt='friend' size='img-large' isRoom={false} friend_id={friends[key]} setReq={ data => {setReq(data);} } user={props.user} inPending={false} overlay={true} />\n                    </div>\n                )}\n\n            </div>\n\n\n            <div className='rooms-header'>\n                <h2 className=\"rooms-header-text mt-2\">Rooms</h2>\n                <i className={`fas fa-plus-circle add-btn mb-0 ${roomClass}`} onClick={showRoomWindow} />\n            </div>\n            <div className=\"search-window-container\">\n                <CreateRoom createRoom={createRoom} />\n            </div>\n            <div className='row'>\n                {rooms === null ? null : Object.keys(rooms).map(key => \n                    <div key={key} className='col-sm-12 col-md-4 col-lg-2 px-0 mx-3'>\n                        <Preview alt='default_room.jpeg' size='img-large' isRoom={true} room_id={rooms[key]} setReq={ data => {setReq(data);} } user={props.user} overlay={true} />\n                    </div>\n                )}\n            </div>\n\n\n            <div className=\"rooms-header\">\n                <h2 className=\"rooms-header-text mb-0\">Pending Friends</h2>\n            </div>\n            <div className='row'>\n                {requests === null ? null : Object.keys(requests).map(key =>\n                    <div className='col-sm-12 col-md-4 col-lg-2 px-0 mx-3' key={key}>\n                        <Preview src='default_pic.jpeg' alt='friend' size='img-large' name='username' isRoom={false} friend_id={requests[key]} setReq={ data => {setReq(data);} } user={props.user} inPending={true} overlay={true} />\n                    </div>\n                )}\n            </div>\n\n            <p className=\"mt-5 mb-3 mx-auto text-muted\">&copy; 2017–2021</p>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}