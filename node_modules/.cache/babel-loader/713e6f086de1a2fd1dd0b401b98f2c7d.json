{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button } from './Button';\nimport { useHistory } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport './CreateRoom.scss';\nimport './Message.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateRoom = props => {\n  _s();\n\n  const [error, setError] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const history = useHistory();\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:8000/api/create-room\", {\n      // send post request to login endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        name: roomName\n      })\n    });\n    const result = await response.json(); // get content\n\n    if (result['message'] === 'Successfully created room!') {\n      window.location.reload();\n      history.push('/');\n    } else {\n      setError(result);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.createRoom ? 'create-window active' : 'create-window',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Room Name\",\n          variant: \"filled\",\n          onChange: e => setRoomName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonSize: \"btn--md\",\n          buttonStyle: \"btn--secondary\",\n          type: \"submit\",\n          my: \"mt-2\",\n          mx: \"mx-auto\",\n          onClick: submit,\n          children: \"Create Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), error === '' ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"search-result\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateRoom, \"BbryOj7+ndg8g9rEr42R6JmXQ98=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/CreateRoom.js"],"names":["React","SyntheticEvent","useState","Button","useHistory","TextField","CreateRoom","props","error","setError","roomName","setRoomName","history","submit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","name","result","json","window","location","reload","push","createRoom","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,cAAf,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,mBAAP;AACA,OAAO,gBAAP;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,MAAM,GAAG,MAAMC,CAAN,IAA4B;AACvCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAAE;AACpEC,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFyD;AAGlEC,MAAAA,WAAW,EAAE,SAHqD;AAIlEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAEd;AADW,OAAf;AAJ4D,KAA1C,CAA5B;AASA,UAAMe,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAArB,CAZuC,CAYF;;AACrC,QAAID,MAAM,CAAC,SAAD,CAAN,KAAsB,4BAA1B,EAAwD;AACpDE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAjB,MAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACH,KAHD,MAGO;AACHrB,MAAAA,QAAQ,CAACgB,MAAD,CAAR;AACH;AAEJ,GApBD;;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAElB,KAAK,CAACwB,UAAN,GAAmB,sBAAnB,GAA4C,eAA5D;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,KAAK,EAAC,WADV;AAEI,UAAA,OAAO,EAAC,QAFZ;AAGI,UAAA,QAAQ,EAAEjB,CAAC,IAAEH,WAAW,CAACG,CAAC,CAACkB,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAC,SAAnB;AAA6B,UAAA,WAAW,EAAC,gBAAzC;AAA0D,UAAA,IAAI,EAAC,QAA/D;AAAwE,UAAA,EAAE,EAAC,MAA3E;AAAkF,UAAA,EAAE,EAAC,SAArF;AAA+F,UAAA,OAAO,EAAEpB,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAOKL,KAAK,KAAK,EAAV,GAAe,IAAf,gBAAsB;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1CM;;GAAMF,U;UAGOF,U;;;KAHPE,U","sourcesContent":["import React, {SyntheticEvent, useState} from 'react'\nimport {Button} from './Button'\nimport {useHistory} from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport './CreateRoom.scss'\nimport './Message.scss'\n\nexport const CreateRoom = (props) => {\n    const [error, setError] = useState('')\n    const [roomName, setRoomName] = useState('')\n    const history = useHistory()\n\n    const submit = async(e: SyntheticEvent) => {\n        e.preventDefault()\n\n        const response = await fetch(\"http://localhost:8000/api/create-room\", { // send post request to login endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                name: roomName,\n            })\n        })\n\n        const result = await response.json() // get content\n        if (result['message'] === 'Successfully created room!') {\n            window.location.reload();\n            history.push('/')\n        } else {\n            setError(result)\n        }\n\n    }\n\n    return (\n        <div className={props.createRoom ? 'create-window active' : 'create-window'} >\n            <div className='search-box'>\n            <div className='mt-5' align='center'>\n                <TextField\n                    label=\"Room Name\"\n                    variant=\"filled\"\n                    onChange={e=>setRoomName(e.target.value)}\n                />\n                <Button buttonSize='btn--md' buttonStyle='btn--secondary' type='submit' my='mt-2' mx='mx-auto' onClick={submit}>Create Room</Button>\n                {error === '' ? null : <li className='search-result'>{error}</li>}\n            </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}