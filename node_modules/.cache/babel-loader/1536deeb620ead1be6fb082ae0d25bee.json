{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button } from './Button'; //import {Link} from 'react-router-dom'\n\nimport { Preview } from './Preview';\nimport TextField from '@material-ui/core/TextField';\nimport './Search.scss';\nimport './Message.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = props => {\n  _s();\n\n  const [error, setError] = useState('');\n  const [username, setUsername] = useState('');\n  const [receivedData, setReceivedData] = useState(false);\n  const [data, setData] = useState('');\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/search-friend`, {\n      // send post request to login endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        username: username\n      })\n    });\n    const result = await response.json(); // get content\n\n    if (result !== null) {\n      setError('');\n      setReceivedData(true);\n      setData(result);\n    } else {\n      setError('user not found');\n      setReceivedData(false);\n      setData('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.search ? 'search-window active' : 'search-window',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search...\",\n          maxRows: 4,\n          variant: \"filled\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonSize: \"btn--md\",\n          buttonStyle: \"btn--secondary\",\n          type: \"submit\",\n          my: \"mt-2\",\n          mx: \"mx-auto\",\n          onClick: submit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), error === '' ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"search-result\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }, this), receivedData ? Object.keys(data).map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"search-result\",\n          children: /*#__PURE__*/_jsxDEV(Preview, {\n            src: data[key]['profile_pic'],\n            alt: \"friend\",\n            size: \"img-large\",\n            name: data[key]['username'],\n            friend_id: data[key]['_id'],\n            setReq: data => props.setReq(data),\n            user: props.user,\n            inPending: false,\n            overlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"ygYC8VFGLC1otvi+CJ4JmnbAPEs=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Search.js"],"names":["React","SyntheticEvent","useState","Button","Preview","TextField","Search","props","error","setError","username","setUsername","receivedData","setReceivedData","data","setData","submit","e","preventDefault","response","fetch","process","env","REACT_APP_SERVER_URL","method","headers","credentials","body","JSON","stringify","result","json","search","target","value","Object","keys","map","key","setReq","user"],"mappings":"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","sourcesContent":["import React, {SyntheticEvent, useState} from 'react'\nimport {Button} from './Button'\n//import {Link} from 'react-router-dom'\nimport {Preview} from './Preview'\nimport TextField from '@material-ui/core/TextField';\nimport './Search.scss'\nimport './Message.scss'\n\nexport const Search = (props) => {\n    const [error, setError] = useState('')\n    const [username, setUsername] = useState('')\n    const [receivedData, setReceivedData] = useState(false)\n    const [data, setData] = useState('')\n\n    const submit = async(e: SyntheticEvent) => {\n        e.preventDefault()\n\n        const response = await fetch(`http://${process.env.REACT_APP_SERVER_URL}/api/search-friend`, { // send post request to login endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                username: username\n            })\n        })\n\n        const result = await response.json() // get content\n\n        if (result !== null) {\n            setError('')\n            setReceivedData(true)\n            setData(result)\n        } else {\n            setError('user not found')\n            setReceivedData(false)\n            setData('')\n        }\n\n    }\n\n    return (\n        <div className={props.search ? 'search-window active' : 'search-window'} >\n            <div className='search-box'>\n            <div className='mt-5' align='center'>\n                <TextField\n                    label=\"Search...\"\n                    maxRows={4}\n                    variant=\"filled\"\n                    onChange={e=>setUsername(e.target.value)}\n                />\n                <Button buttonSize='btn--md' buttonStyle='btn--secondary' type='submit' my='mt-2' mx='mx-auto' onClick={submit}>Search</Button>\n                {error === '' ? null : <li className='search-result'>{error}</li>}\n                {receivedData ? Object.keys(data).map(key => \n                    <li key={key} className='search-result'>\n                        <Preview src={data[key]['profile_pic']} alt='friend' size='img-large' name={data[key]['username']} friend_id={data[key]['_id']} setReq={data => props.setReq(data) } user={props.user} inPending={false} overlay={true} />\n                    </li>\n                )\n                : null}\n            </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}