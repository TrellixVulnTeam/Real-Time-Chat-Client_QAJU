{"ast":null,"code":"var _jsxFileName = \"/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../pages/Home.scss';\nimport './Preview.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZES = ['img-large', 'img-small'];\nexport const Preview = props => {\n  _s();\n\n  const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n\n  const [isFriend, setIsFriend] = useState(false);\n  const [showSelect, setShowSelect] = useState(false);\n  const history = useHistory(); // when friend is clicked function\n\n  const clickFriend = async () => {\n    const response = await fetch(\"http://localhost:8000/api/check-friend\", {\n      // send post request to logout endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        friend_id: props.friend_id\n      })\n    });\n    const result = await response.json();\n    setShowSelect(!showSelect); // toggle show select menu\n\n    if (result['message'] === 'Success') {\n      setIsFriend(true);\n    } else {\n      setIsFriend(false);\n      const response = await fetch(\"http://localhost:8000/api/add-friend\", {\n        // send post request to logout endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          user_id: props.user_id,\n          friend_id: props.friend_id\n        })\n      });\n      const data = await response.json();\n\n      if (data.message === 'Success') {\n        console.log(\"friend added\");\n      } else {\n        console.log(\"couldn't add friend\");\n      }\n    }\n  };\n\n  const iconClasses = showSelect ? 'fas fa-plus-circle add-btn mb-0 rotate-icon' : 'fas fa-plus-circle add-btn mb-0'; // check if friends\n  // if friends:\n  // Go to messages\n  // else:\n  // send friend request\n\n  /*\n      <div className='friend'>\n              <figure className='my-0 preview-link'>\n                  <img src={props.src} alt='friend' className={`friend mt-2 ${getImgSize}`} />\n                  <div class=\"overlay\">\n                      <a href=\"/\" class=\"icon\" title=\"User Profile\">\n                        <i class=\"fa fa-user\"></i>\n                      </a>\n                  </div>\n              </figure>\n          <div className='friend-name mx-auto'>\n              <p>{props.name}</p>\n          </div>\n      </div>\n   * */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friend\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.src,\n      alt: \"friend\",\n      className: `friend mt-2 ${getImgSize}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        class: \"icon\",\n        title: \"User Profile\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"Pa14Ke6vk5NJwFTmOy76mA4Zulw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/bzeeno/Code/Go/RealTimeChat/frontend/src/components/Preview.js"],"names":["React","useState","useHistory","SIZES","Preview","props","getImgSize","includes","size","isFriend","setIsFriend","showSelect","setShowSelect","history","clickFriend","response","fetch","method","headers","credentials","body","JSON","stringify","friend_id","result","json","user_id","data","message","console","log","iconClasses","src"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport '../pages/Home.scss'\nimport './Preview.scss'\n\nconst SIZES = ['img-large','img-small']\n\nexport const Preview = (props) => {\n    const getImgSize = SIZES.includes(props.size) ? props.size : SIZES[0]; // get button style. default to primary\n    const [isFriend, setIsFriend] = useState(false)\n    const [showSelect, setShowSelect] = useState(false)\n    const history = useHistory()\n\n    // when friend is clicked function\n    const clickFriend = async () => {\n        const response = await fetch(\"http://localhost:8000/api/check-friend\", { // send post request to logout endpoint\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                friend_id: props.friend_id\n            })\n        })\n\n        const result = await response.json()\n\n        setShowSelect(!showSelect) // toggle show select menu\n\n        if (result['message'] === 'Success') {\n            setIsFriend(true)\n        } else {\n            setIsFriend(false)\n            const response = await fetch(\"http://localhost:8000/api/add-friend\", { // send post request to logout endpoint\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                credentials: 'include',\n                body: JSON.stringify({\n                    user_id: props.user_id,\n                    friend_id: props.friend_id\n                })\n            })\n\n            const data = await response.json()\n            if (data.message === 'Success') {\n                console.log(\"friend added\")\n            } else {\n                console.log(\"couldn't add friend\")\n            }\n        }\n    }\n\n    const iconClasses = showSelect ? 'fas fa-plus-circle add-btn mb-0 rotate-icon' : 'fas fa-plus-circle add-btn mb-0'\n\n        \n    // check if friends\n    // if friends:\n    // Go to messages\n    // else:\n    // send friend request\n\n    /*\n        <div className='friend'>\n                <figure className='my-0 preview-link'>\n                    <img src={props.src} alt='friend' className={`friend mt-2 ${getImgSize}`} />\n                    <div class=\"overlay\">\n                        <a href=\"/\" class=\"icon\" title=\"User Profile\">\n                          <i class=\"fa fa-user\"></i>\n                        </a>\n                    </div>\n                </figure>\n            <div className='friend-name mx-auto'>\n                <p>{props.name}</p>\n            </div>\n        </div>\n     * */\n    return (\n        <div className='friend'>\n            <img src={props.src} alt='friend' className={`friend mt-2 ${getImgSize}`} />\n            <div class=\"overlay\">\n                <a href=\"/\" class=\"icon\" title=\"User Profile\">\n                  <i class=\"fa fa-user\"></i>\n                </a>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}